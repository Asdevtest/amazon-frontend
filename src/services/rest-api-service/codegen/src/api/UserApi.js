/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV1AdminsGetNotPaidProductsCreatedby from '../model/ApiV1AdminsGetNotPaidProductsCreatedby';
import InlineObject21 from '../model/InlineObject21';
import InlineObject22 from '../model/InlineObject22';
import InlineResponse2011 from '../model/InlineResponse2011';
import InlineResponse400 from '../model/InlineResponse400';
import InlineResponse403 from '../model/InlineResponse403';
import InlineResponse404 from '../model/InlineResponse404';
import InlineResponse500 from '../model/InlineResponse500';

/**
* User service.
* @module api/UserApi
* @version v0.0.1
*/
export default class UserApi {

    /**
    * Constructs a new UserApi. 
    * @alias module:api/UserApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1UsersInfoGet operation.
     * @callback module:api/UserApi~apiV1UsersInfoGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV1AdminsGetNotPaidProductsCreatedby} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить информацию от текущем пользователе.
     * ## Получить информацию от текущем пользователе.   
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/UserApi~apiV1UsersInfoGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV1AdminsGetNotPaidProductsCreatedby}
     */
    apiV1UsersInfoGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = ApiV1AdminsGetNotPaidProductsCreatedby;
      return this.apiClient.callApi(
        '/api/v1/users/info', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1UsersPost operation.
     * @callback module:api/UserApi~apiV1UsersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV1AdminsGetNotPaidProductsCreatedby} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Создание нового пользователя. Регистрация.
     * ## Создание нового пользователя. Регистрация.   
     * @param {module:model/InlineObject21} InlineObject21 
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/UserApi~apiV1UsersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV1AdminsGetNotPaidProductsCreatedby}
     */
    apiV1UsersPost(InlineObject21, opts, callback) {
      opts = opts || {};
      let postBody = InlineObject21;
      // verify the required parameter 'InlineObject21' is set
      if (InlineObject21 === undefined || InlineObject21 === null) {
        throw new Error("Missing the required parameter 'InlineObject21' when calling apiV1UsersPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = ApiV1AdminsGetNotPaidProductsCreatedby;
      return this.apiClient.callApi(
        '/api/v1/users/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1UsersSignInPost operation.
     * @callback module:api/UserApi~apiV1UsersSignInPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2011} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получение токена авторизации.
     * ## Получение токена авторизации.   ## Время жизни токена 96 часов   
     * @param {module:model/InlineObject22} InlineObject22 
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/UserApi~apiV1UsersSignInPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2011}
     */
    apiV1UsersSignInPost(InlineObject22, opts, callback) {
      opts = opts || {};
      let postBody = InlineObject22;
      // verify the required parameter 'InlineObject22' is set
      if (InlineObject22 === undefined || InlineObject22 === null) {
        throw new Error("Missing the required parameter 'InlineObject22' when calling apiV1UsersSignInPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = InlineResponse2011;
      return this.apiClient.callApi(
        '/api/v1/users/sign_in', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
