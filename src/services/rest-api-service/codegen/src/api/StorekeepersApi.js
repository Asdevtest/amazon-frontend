/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject16 from '../model/InlineObject16';
import InlineObject17 from '../model/InlineObject17';
import InlineResponse20010 from '../model/InlineResponse20010';
import InlineResponse20011 from '../model/InlineResponse20011';
import InlineResponse20012 from '../model/InlineResponse20012';
import InlineResponse201 from '../model/InlineResponse201';
import InlineResponse400 from '../model/InlineResponse400';
import InlineResponse404 from '../model/InlineResponse404';
import InlineResponse500 from '../model/InlineResponse500';
import Null from '../model/Null';

/**
* Storekeepers service.
* @module api/StorekeepersApi
* @version v0.0.1
*/
export default class StorekeepersApi {

    /**
    * Constructs a new StorekeepersApi. 
    * @alias module:api/StorekeepersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1StorekeepersBatchesGet operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersBatchesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse20012>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получить партии....
     * ## Получить партии...  
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersBatchesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse20012>}
     */
    apiV1StorekeepersBatchesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse20012];
      return this.apiClient.callApi(
        '/api/v1/storekeepers/batches', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersBoxesGuidPatch operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersBoxesGuidPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Изменить коробку с товаром.
     * ## Изменить коробку с товаром.  ## Выборка идет по GUID коробки и кладовщика/сборщика, кто ее подобрал. Нельзя отредактировать чужую коробку.  
     * @param {String} guid GUID коробки, которую мы хотим изменить
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:model/InlineObject16} opts.InlineObject16 
     * @param {module:api/StorekeepersApi~apiV1StorekeepersBoxesGuidPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse201}
     */
    apiV1StorekeepersBoxesGuidPatch(guid, opts, callback) {
      opts = opts || {};
      let postBody = opts['InlineObject16'];
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1StorekeepersBoxesGuidPatch");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = InlineResponse201;
      return this.apiClient.callApi(
        '/api/v1/storekeepers/boxes/{guid}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersBoxesMyGet operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersBoxesMyGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse20010>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получить коробки закрепленные за данным сборщиком..
     * ## Получить коробки закрепленные за данным сборщиком.  
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersBoxesMyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse20010>}
     */
    apiV1StorekeepersBoxesMyGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse20010];
      return this.apiClient.callApi(
        '/api/v1/storekeepers/boxes/my', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersBoxesPickupGuidPost operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersBoxesPickupGuidPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Null} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Закрепить коробку за сборщиками.
     * ## Закрепить коробку за сборщиками.   
     * @param {String} guid GUID коробки, которую мы хотим изменить
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersBoxesPickupGuidPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Null}
     */
    apiV1StorekeepersBoxesPickupGuidPost(guid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1StorekeepersBoxesPickupGuidPost");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = Null;
      return this.apiClient.callApi(
        '/api/v1/storekeepers/boxes/pickup/{guid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersBoxesVacGet operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersBoxesVacGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse20010>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получить коробки не закрепленные за сборщиками.
     * ## Получить коробки не закрепленные за сборщиками.   
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersBoxesVacGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse20010>}
     */
    apiV1StorekeepersBoxesVacGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse20010];
      return this.apiClient.callApi(
        '/api/v1/storekeepers/boxes/vac', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersTasksGuidPatch operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersTasksGuidPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Null} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Изменить задачу.
     * ## Изменить задачу. Здесь только статус.   
     * @param {String} guid GUID задачи, которую мы хотим изменить
     * @param {module:model/InlineObject17} InlineObject17 
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersTasksGuidPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Null}
     */
    apiV1StorekeepersTasksGuidPatch(guid, InlineObject17, opts, callback) {
      opts = opts || {};
      let postBody = InlineObject17;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1StorekeepersTasksGuidPatch");
      }
      // verify the required parameter 'InlineObject17' is set
      if (InlineObject17 === undefined || InlineObject17 === null) {
        throw new Error("Missing the required parameter 'InlineObject17' when calling apiV1StorekeepersTasksGuidPatch");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = Null;
      return this.apiClient.callApi(
        '/api/v1/storekeepers/tasks/{guid}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersTasksMyGet operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersTasksMyGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse20011>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получить задачи закрепленные за данным сборщиком..
     * ## Получить задачи закрепленные за данным сборщиком.  
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersTasksMyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse20011>}
     */
    apiV1StorekeepersTasksMyGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse20011];
      return this.apiClient.callApi(
        '/api/v1/storekeepers/tasks/my', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersTasksPickupGuidPost operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersTasksPickupGuidPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Null} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Закрепить задачу за сборщиком.
     * ## Закрепить задачу за сборщиком.   
     * @param {String} guid GUID задачи, которую мы хотим изменить
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersTasksPickupGuidPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Null}
     */
    apiV1StorekeepersTasksPickupGuidPost(guid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1StorekeepersTasksPickupGuidPost");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = Null;
      return this.apiClient.callApi(
        '/api/v1/storekeepers/tasks/pickup/{guid}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1StorekeepersTasksVacGet operation.
     * @callback module:api/StorekeepersApi~apiV1StorekeepersTasksVacGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse20011>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получить задачи не закрепленные за сотрудниками склада.
     * ## Получить задачи не закрепленные за сотрудниками склада.   
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/StorekeepersApi~apiV1StorekeepersTasksVacGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse20011>}
     */
    apiV1StorekeepersTasksVacGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse20011];
      return this.apiClient.callApi(
        '/api/v1/storekeepers/tasks/vac', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
