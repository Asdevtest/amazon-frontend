/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject19 from '../model/InlineObject19';
import InlineObject20 from '../model/InlineObject20';
import InlineResponse20013 from '../model/InlineResponse20013';
import InlineResponse201 from '../model/InlineResponse201';
import InlineResponse400 from '../model/InlineResponse400';
import InlineResponse404 from '../model/InlineResponse404';
import InlineResponse500 from '../model/InlineResponse500';
import Null from '../model/Null';

/**
* Supplier service.
* @module api/SupplierApi
* @version v0.0.1
*/
export default class SupplierApi {

    /**
    * Constructs a new SupplierApi. 
    * @alias module:api/SupplierApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1SuppliersGet operation.
     * @callback module:api/SupplierApi~apiV1SuppliersGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse20013>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получить список поставщиков.
     * ## Получить список поставщиков.   
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/SupplierApi~apiV1SuppliersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse20013>}
     */
    apiV1SuppliersGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse20013];
      return this.apiClient.callApi(
        '/api/v1/suppliers/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SuppliersGuidDelete operation.
     * @callback module:api/SupplierApi~apiV1SuppliersGuidDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Удалить поставщика.
     * ##  Удалить поставщика.   
     * @param {String} guid GUID в сущности в БД
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/SupplierApi~apiV1SuppliersGuidDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse201}
     */
    apiV1SuppliersGuidDelete(guid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1SuppliersGuidDelete");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = InlineResponse201;
      return this.apiClient.callApi(
        '/api/v1/suppliers/{guid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SuppliersGuidGet operation.
     * @callback module:api/SupplierApi~apiV1SuppliersGuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse20013} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Получить одного поставщика.
     * ## Получить одного поставщика.   
     * @param {String} guid GUID в сущности в БД
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/SupplierApi~apiV1SuppliersGuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse20013}
     */
    apiV1SuppliersGuidGet(guid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1SuppliersGuidGet");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = InlineResponse20013;
      return this.apiClient.callApi(
        '/api/v1/suppliers/{guid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SuppliersGuidPatch operation.
     * @callback module:api/SupplierApi~apiV1SuppliersGuidPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Null} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Изменить поставщика.
     * ## Изменить  поставщика.   
     * @param {String} guid GUID в сущности в БД
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:model/InlineObject20} opts.InlineObject20 
     * @param {module:api/SupplierApi~apiV1SuppliersGuidPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Null}
     */
    apiV1SuppliersGuidPatch(guid, opts, callback) {
      opts = opts || {};
      let postBody = opts['InlineObject20'];
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1SuppliersGuidPatch");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = Null;
      return this.apiClient.callApi(
        '/api/v1/suppliers/{guid}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1SuppliersPost operation.
     * @callback module:api/SupplierApi~apiV1SuppliersPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Добавить нового поставщика.
     * ## Добавить нового поставщика.   
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:model/InlineObject19} opts.InlineObject19 
     * @param {module:api/SupplierApi~apiV1SuppliersPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse201}
     */
    apiV1SuppliersPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['InlineObject19'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = InlineResponse201;
      return this.apiClient.callApi(
        '/api/v1/suppliers/', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
