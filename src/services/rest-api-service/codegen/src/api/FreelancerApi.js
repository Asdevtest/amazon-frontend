/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";


/**
* Client service.
* @module api/ClientApi
* @version 0.1.0
*/

export default class ClientApi {

     /**
    * Constructs a new ClientApi. 
    * @alias module:api/ClientApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
      constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * # Получить все оплаты, которые были начислены обратившемуся пользователю..
     * ## Получить все оплаты, которые были начислены обратившемуся пользователю..  
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/InlineResponse2003>} and HTTP response
     */
     apiV1FreelancerPaymentsGetWithHttpInfo(opts) {
        opts = opts || {};
        let postBody = null;
  
        let pathParams = {
        };
        let queryParams = {
        };
        let headerParams = {
          'Accept-Encoding': opts['Accept_Encoding']
        };
        let formParams = {
        };
  
        let authNames = ['AccessTokenBearer'];
        let contentTypes = [];
        let accepts = ['text/html'];
        let returnType = [Object];
        return this.apiClient.callApi(
          '/api/v1/other/payments/my', 'GET',
          pathParams, queryParams, headerParams, formParams, postBody,
          authNames, contentTypes, accepts, returnType, null
        );
      }
  
  
  
       /**
       * # Получить все оплаты, которые были начислены обратившемуся пользователю..
       * ## Получить все оплаты, которые были начислены обратившемуся пользователю..  
       * @param {Object} opts Optional parameters
       * @param {String} opts.Accept_Encoding 
       * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/InlineResponse2003>}
       */
        apiV1FreelancerPaymentsGet(opts) {
          return this.apiV1FreelancerPaymentsGetWithHttpInfo(opts)
            .then(function(response_and_data) {
              return response_and_data.data;
            });
        }


}