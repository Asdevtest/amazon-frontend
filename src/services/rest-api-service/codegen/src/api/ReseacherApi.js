/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject14 from '../model/InlineObject14';
import InlineObject15 from '../model/InlineObject15';
import InlineResponse200 from '../model/InlineResponse200';
import InlineResponse2004 from '../model/InlineResponse2004';
import InlineResponse2008 from '../model/InlineResponse2008';
import InlineResponse2009 from '../model/InlineResponse2009';
import InlineResponse201 from '../model/InlineResponse201';
import InlineResponse400 from '../model/InlineResponse400';
import InlineResponse404 from '../model/InlineResponse404';
import InlineResponse409 from '../model/InlineResponse409';
import InlineResponse500 from '../model/InlineResponse500';
import Null from '../model/Null';

/**
* Reseacher service.
* @module api/ReseacherApi
* @version v0.0.1
*/
export default class ReseacherApi {

    /**
    * Constructs a new ReseacherApi. 
    * @alias module:api/ReseacherApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1ResearchersCheckProductsIdGet operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersCheckProductsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2008} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Проверить продукт по ID существует ли он в базе.
     * Проверить продукт по ID существует ли он в базе.  В базе id продукта (asin) должно быть уникально. База не даст завести дубль. Перед добавление продукта   нужно проверить, нет ли в базе уже продукта с таким ID   
     * @param {String} id id для проверки
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersCheckProductsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2008}
     */
    apiV1ResearchersCheckProductsIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV1ResearchersCheckProductsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = InlineResponse2008;
      return this.apiClient.callApi(
        '/api/v1/researchers/check_products/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersParseAmazonIdGet operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersParseAmazonIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2009} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить данные о продукте с сайта Амазон по id(asin)
     * Получить данные о продукте с сайта Амазон по id(asin)  
     * @param {String} id id(asin) для проверки
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersParseAmazonIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2009}
     */
    apiV1ResearchersParseAmazonIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV1ResearchersParseAmazonIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = InlineResponse2009;
      return this.apiClient.callApi(
        '/api/v1/researchers/parse_amazon/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersParseSellercentralGet operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersParseSellercentralGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse2009} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить данные о продукте с SellerCentral
     * Получить данные о продукте с SellerCentral  
     * @param {Object} opts Optional parameters
     * @param {String} opts.id ASIN продукта
     * @param {Number} opts.price Цена продукта.
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersParseSellercentralGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse2009}
     */
    apiV1ResearchersParseSellercentralGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'price': opts['price']
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = InlineResponse2009;
      return this.apiClient.callApi(
        '/api/v1/researchers/parse_sellercentral', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersPaymentsMyGet operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersPaymentsMyGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse2004>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить информацию об платежах для этого менеджера.
     * Получить информацию об платежах для этого менеджера.
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersPaymentsMyGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse2004>}
     */
    apiV1ResearchersPaymentsMyGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse2004];
      return this.apiClient.callApi(
        '/api/v1/researchers/payments/my', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersProductsGet operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersProductsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/InlineResponse200>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить список товаров созданных данным пользователем.
     * Получить список товаров созданных данным пользователем.   
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersProductsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/InlineResponse200>}
     */
    apiV1ResearchersProductsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = [InlineResponse200];
      return this.apiClient.callApi(
        '/api/v1/researchers/products', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersProductsGuidDelete operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersProductsGuidDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Null} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Удалить продукт.
     * ## Удалить продукт.   
     * @param {String} guid GUID продукта.
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersProductsGuidDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Null}
     */
    apiV1ResearchersProductsGuidDelete(guid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1ResearchersProductsGuidDelete");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = Null;
      return this.apiClient.callApi(
        '/api/v1/researchers/products/{guid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersProductsGuidGet operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersProductsGuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Получить товар по GUID.
     * Получить товар по GUID.
     * @param {String} guid GUID запрашиваемого ресурса.
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersProductsGuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse200}
     */
    apiV1ResearchersProductsGuidGet(guid, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1ResearchersProductsGuidGet");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = [];
      let accepts = ['text/html'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/api/v1/researchers/products/{guid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersProductsGuidPatch operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersProductsGuidPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Null} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * #  Изменить продукт.
     * ## Изменить продукт.   ## ASIN нельзя менять после того как создан продукт.   
     * @param {String} guid GUID продукта БД
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:model/InlineObject15} opts.InlineObject15 
     * @param {module:api/ReseacherApi~apiV1ResearchersProductsGuidPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Null}
     */
    apiV1ResearchersProductsGuidPatch(guid, opts, callback) {
      opts = opts || {};
      let postBody = opts['InlineObject15'];
      // verify the required parameter 'guid' is set
      if (guid === undefined || guid === null) {
        throw new Error("Missing the required parameter 'guid' when calling apiV1ResearchersProductsGuidPatch");
      }

      let pathParams = {
        'guid': guid
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = Null;
      return this.apiClient.callApi(
        '/api/v1/researchers/products/{guid}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1ResearchersProductsPost operation.
     * @callback module:api/ReseacherApi~apiV1ResearchersProductsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/InlineResponse201} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * # Добавить новый продукт.
     * ## Добавить новый продукт.   
     * @param {module:model/InlineObject14} InlineObject14 
     * @param {Object} opts Optional parameters
     * @param {String} opts.Accept_Encoding  (default to 'gzip, deflate')
     * @param {module:api/ReseacherApi~apiV1ResearchersProductsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/InlineResponse201}
     */
    apiV1ResearchersProductsPost(InlineObject14, opts, callback) {
      opts = opts || {};
      let postBody = InlineObject14;
      // verify the required parameter 'InlineObject14' is set
      if (InlineObject14 === undefined || InlineObject14 === null) {
        throw new Error("Missing the required parameter 'InlineObject14' when calling apiV1ResearchersProductsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Encoding': opts['Accept_Encoding']
      };
      let formParams = {
      };

      let authNames = ['AccessTokenBearer'];
      let contentTypes = ['application/json'];
      let accepts = ['text/html'];
      let returnType = InlineResponse201;
      return this.apiClient.callApi(
        '/api/v1/researchers/products', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
