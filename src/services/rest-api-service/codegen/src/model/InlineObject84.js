/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiV1ShopSellStatistics1 from './ApiV1ShopSellStatistics1';

/**
 * The InlineObject84 model module.
 * @module model/InlineObject84
 * @version 0.1.0
 */
class InlineObject84 {
    /**
     * Constructs a new <code>InlineObject84</code>.
     * Схема продажи магазина
     * @alias module:model/InlineObject84
     */
    constructor() { 
        
        InlineObject84.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject84</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject84} obj Optional instance to populate.
     * @return {module:model/InlineObject84} The populated <code>InlineObject84</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject84();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('businessStartDate')) {
                obj['businessStartDate'] = ApiClient.convertToType(data['businessStartDate'], 'Date');
            }
            if (data.hasOwnProperty('shopDetails')) {
                obj['shopDetails'] = ApiClient.convertToType(data['shopDetails'], 'String');
            }
            if (data.hasOwnProperty('shopAssets')) {
                obj['shopAssets'] = ApiClient.convertToType(data['shopAssets'], ['String']);
            }
            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], ['String']);
            }
            if (data.hasOwnProperty('shopLink')) {
                obj['shopLink'] = ApiClient.convertToType(data['shopLink'], 'String');
            }
            if (data.hasOwnProperty('statistics')) {
                obj['statistics'] = ApiClient.convertToType(data['statistics'], [ApiV1ShopSellStatistics1]);
            }
            if (data.hasOwnProperty('opportunities')) {
                obj['opportunities'] = ApiClient.convertToType(data['opportunities'], ['String']);
            }
            if (data.hasOwnProperty('risks')) {
                obj['risks'] = ApiClient.convertToType(data['risks'], ['String']);
            }
            if (data.hasOwnProperty('requiredSkills')) {
                obj['requiredSkills'] = ApiClient.convertToType(data['requiredSkills'], ['String']);
            }
            if (data.hasOwnProperty('sellIncludes')) {
                obj['sellIncludes'] = ApiClient.convertToType(data['sellIncludes'], ['String']);
            }
            if (data.hasOwnProperty('reasonForSale')) {
                obj['reasonForSale'] = ApiClient.convertToType(data['reasonForSale'], ['String']);
            }
            if (data.hasOwnProperty('additionalInfo')) {
                obj['additionalInfo'] = ApiClient.convertToType(data['additionalInfo'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * Имя магазина для продажи
 * @member {String} title
 */
InlineObject84.prototype['title'] = undefined;

/**
 * Стоимость магазина
 * @member {Number} price
 */
InlineObject84.prototype['price'] = undefined;

/**
 * Дата создания бизнеса
 * @member {Date} businessStartDate
 */
InlineObject84.prototype['businessStartDate'] = undefined;

/**
 * Детали магазина
 * @member {String} shopDetails
 */
InlineObject84.prototype['shopDetails'] = undefined;

/**
 * Активы магазина
 * @member {Array.<String>} shopAssets
 */
InlineObject84.prototype['shopAssets'] = undefined;

/**
 * Файлы, которые привязаны к магазину (Пока заглушка, потом можно будет отправлят файлы, сейчас - ссылки)
 * @member {Array.<String>} files
 */
InlineObject84.prototype['files'] = undefined;

/**
 * Ссылка на сайт магазина
 * @member {String} shopLink
 */
InlineObject84.prototype['shopLink'] = undefined;

/**
 * Статистика магазина по месяцам
 * @member {Array.<module:model/ApiV1ShopSellStatistics1>} statistics
 */
InlineObject84.prototype['statistics'] = undefined;

/**
 * Возможности магазина
 * @member {Array.<String>} opportunities
 */
InlineObject84.prototype['opportunities'] = undefined;

/**
 * Риски магазина
 * @member {Array.<String>} risks
 */
InlineObject84.prototype['risks'] = undefined;

/**
 * Требуемые навыки
 * @member {Array.<String>} requiredSkills
 */
InlineObject84.prototype['requiredSkills'] = undefined;

/**
 * В продажу также включено
 * @member {Array.<String>} sellIncludes
 */
InlineObject84.prototype['sellIncludes'] = undefined;

/**
 * Причина продажи
 * @member {Array.<String>} reasonForSale
 */
InlineObject84.prototype['reasonForSale'] = undefined;

/**
 * Дополнительная информация
 * @member {Array.<String>} additionalInfo
 */
InlineObject84.prototype['additionalInfo'] = undefined;






export default InlineObject84;

