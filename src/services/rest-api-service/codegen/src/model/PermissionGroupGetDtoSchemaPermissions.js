/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2002AllowedUrls from './InlineResponse2002AllowedUrls';

/**
 * The PermissionGroupGetDtoSchemaPermissions model module.
 * @module model/PermissionGroupGetDtoSchemaPermissions
 * @version 0.1.0
 */
class PermissionGroupGetDtoSchemaPermissions {
    /**
     * Constructs a new <code>PermissionGroupGetDtoSchemaPermissions</code>.
     * Отобразить permission
     * @alias module:model/PermissionGroupGetDtoSchemaPermissions
     * @param _id {String} GUID Permission в базе данных
     * @param key {String} Permission ключ
     * @param title {String} Простое название.
     * @param description {String} Описание permission
     * @param allowedUrls {Array.<module:model/InlineResponse2002AllowedUrls>} Массив доступных url.
     * @param role {Number} Роль для которого данный permission
     * @param createdById {String} GUID любого, кто последний создал permission.
     * @param createdAt {Date} Дата создания
     * @param updatedAt {Date} Дата изменения
     */
    constructor(_id, key, title, description, allowedUrls, role, createdById, createdAt, updatedAt) { 
        
        PermissionGroupGetDtoSchemaPermissions.initialize(this, _id, key, title, description, allowedUrls, role, createdById, createdAt, updatedAt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _id, key, title, description, allowedUrls, role, createdById, createdAt, updatedAt) { 
        obj['_id'] = _id;
        obj['key'] = key;
        obj['title'] = title;
        obj['description'] = description;
        obj['allowedUrls'] = allowedUrls;
        obj['role'] = role;
        obj['createdById'] = createdById;
        obj['createdAt'] = createdAt;
        obj['updatedAt'] = updatedAt;
    }

    /**
     * Constructs a <code>PermissionGroupGetDtoSchemaPermissions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PermissionGroupGetDtoSchemaPermissions} obj Optional instance to populate.
     * @return {module:model/PermissionGroupGetDtoSchemaPermissions} The populated <code>PermissionGroupGetDtoSchemaPermissions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PermissionGroupGetDtoSchemaPermissions();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('allowedUrls')) {
                obj['allowedUrls'] = ApiClient.convertToType(data['allowedUrls'], [InlineResponse2002AllowedUrls]);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'Number');
            }
            if (data.hasOwnProperty('hierarchy')) {
                obj['hierarchy'] = ApiClient.convertToType(data['hierarchy'], 'Number');
            }
            if (data.hasOwnProperty('createdById')) {
                obj['createdById'] = ApiClient.convertToType(data['createdById'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedById')) {
                obj['lastModifiedById'] = ApiClient.convertToType(data['lastModifiedById'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * GUID Permission в базе данных
 * @member {String} _id
 */
PermissionGroupGetDtoSchemaPermissions.prototype['_id'] = undefined;

/**
 * Permission ключ
 * @member {String} key
 */
PermissionGroupGetDtoSchemaPermissions.prototype['key'] = undefined;

/**
 * Простое название.
 * @member {String} title
 */
PermissionGroupGetDtoSchemaPermissions.prototype['title'] = undefined;

/**
 * Описание permission
 * @member {String} description
 */
PermissionGroupGetDtoSchemaPermissions.prototype['description'] = undefined;

/**
 * Массив доступных url.
 * @member {Array.<module:model/InlineResponse2002AllowedUrls>} allowedUrls
 */
PermissionGroupGetDtoSchemaPermissions.prototype['allowedUrls'] = undefined;

/**
 * Роль для которого данный permission
 * @member {Number} role
 */
PermissionGroupGetDtoSchemaPermissions.prototype['role'] = undefined;

/**
 * Для фронта, чтобы хранить иерархию.
 * @member {Number} hierarchy
 */
PermissionGroupGetDtoSchemaPermissions.prototype['hierarchy'] = undefined;

/**
 * GUID любого, кто последний создал permission.
 * @member {String} createdById
 */
PermissionGroupGetDtoSchemaPermissions.prototype['createdById'] = undefined;

/**
 * GUID любого, кто последний редактировал permission.
 * @member {String} lastModifiedById
 */
PermissionGroupGetDtoSchemaPermissions.prototype['lastModifiedById'] = undefined;

/**
 * Дата создания
 * @member {Date} createdAt
 */
PermissionGroupGetDtoSchemaPermissions.prototype['createdAt'] = undefined;

/**
 * Дата изменения
 * @member {Date} updatedAt
 */
PermissionGroupGetDtoSchemaPermissions.prototype['updatedAt'] = undefined;






export default PermissionGroupGetDtoSchemaPermissions;

