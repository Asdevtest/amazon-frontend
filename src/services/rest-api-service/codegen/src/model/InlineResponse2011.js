/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2011 model module.
 * @module model/InlineResponse2011
 * @version v0.0.1
 */
class InlineResponse2011 {
    /**
     * Constructs a new <code>InlineResponse2011</code>.
     * @alias module:model/InlineResponse2011
     */
    constructor() { 
        
        InlineResponse2011.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse2011</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2011} obj Optional instance to populate.
     * @return {module:model/InlineResponse2011} The populated <code>InlineResponse2011</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2011();

            if (data.hasOwnProperty('lengthCm')) {
                obj['lengthCm'] = ApiClient.convertToType(data['lengthCm'], 'Number');
            }
            if (data.hasOwnProperty('widthCm')) {
                obj['widthCm'] = ApiClient.convertToType(data['widthCm'], 'Number');
            }
            if (data.hasOwnProperty('heightCm')) {
                obj['heightCm'] = ApiClient.convertToType(data['heightCm'], 'Number');
            }
            if (data.hasOwnProperty('weighGrossKg')) {
                obj['weighGrossKg'] = ApiClient.convertToType(data['weighGrossKg'], 'Number');
            }
            if (data.hasOwnProperty('volumeWeightKg')) {
                obj['volumeWeightKg'] = ApiClient.convertToType(data['volumeWeightKg'], 'Number');
            }
            if (data.hasOwnProperty('weightFinalAccountingKg')) {
                obj['weightFinalAccountingKg'] = ApiClient.convertToType(data['weightFinalAccountingKg'], 'Number');
            }
            if (data.hasOwnProperty('shippingLabel')) {
                obj['shippingLabel'] = ApiClient.convertToType(data['shippingLabel'], 'String');
            }
            if (data.hasOwnProperty('shipmentPlanId')) {
                obj['shipmentPlanId'] = ApiClient.convertToType(data['shipmentPlanId'], 'String');
            }
            if (data.hasOwnProperty('warehouse')) {
                obj['warehouse'] = ApiClient.convertToType(data['warehouse'], 'Number');
            }
            if (data.hasOwnProperty('clientComment')) {
                obj['clientComment'] = ApiClient.convertToType(data['clientComment'], 'String');
            }
            if (data.hasOwnProperty('deliveryMethod')) {
                obj['deliveryMethod'] = ApiClient.convertToType(data['deliveryMethod'], 'Number');
            }
            if (data.hasOwnProperty('lengthCmSupplier')) {
                obj['lengthCmSupplier'] = ApiClient.convertToType(data['lengthCmSupplier'], 'Number');
            }
            if (data.hasOwnProperty('widthCmSupplier')) {
                obj['widthCmSupplier'] = ApiClient.convertToType(data['widthCmSupplier'], 'Number');
            }
            if (data.hasOwnProperty('heightCmSupplier')) {
                obj['heightCmSupplier'] = ApiClient.convertToType(data['heightCmSupplier'], 'Number');
            }
            if (data.hasOwnProperty('weighGrossKgSupplier')) {
                obj['weighGrossKgSupplier'] = ApiClient.convertToType(data['weighGrossKgSupplier'], 'Number');
            }
            if (data.hasOwnProperty('volumeWeightKgSupplier')) {
                obj['volumeWeightKgSupplier'] = ApiClient.convertToType(data['volumeWeightKgSupplier'], 'Number');
            }
            if (data.hasOwnProperty('weightFinalAccountingKgSupplier')) {
                obj['weightFinalAccountingKgSupplier'] = ApiClient.convertToType(data['weightFinalAccountingKgSupplier'], 'Number');
            }
            if (data.hasOwnProperty('buyerComment')) {
                obj['buyerComment'] = ApiClient.convertToType(data['buyerComment'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('lengthCmWarehouse')) {
                obj['lengthCmWarehouse'] = ApiClient.convertToType(data['lengthCmWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('widthCmWarehouse')) {
                obj['widthCmWarehouse'] = ApiClient.convertToType(data['widthCmWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('heightCmWarehouse')) {
                obj['heightCmWarehouse'] = ApiClient.convertToType(data['heightCmWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('weighGrossKgWarehouse')) {
                obj['weighGrossKgWarehouse'] = ApiClient.convertToType(data['weighGrossKgWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('volumeWeightKgWarehouse')) {
                obj['volumeWeightKgWarehouse'] = ApiClient.convertToType(data['volumeWeightKgWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('weightFinalAccountingKgWarehouse')) {
                obj['weightFinalAccountingKgWarehouse'] = ApiClient.convertToType(data['weightFinalAccountingKgWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiClient.convertToType(data['createdBy'], 'String');
            }
            if (data.hasOwnProperty('buyerId')) {
                obj['buyerId'] = ApiClient.convertToType(data['buyerId'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = ApiClient.convertToType(data['lastModifiedBy'], 'String');
            }
            if (data.hasOwnProperty('ordersId')) {
                obj['ordersId'] = ApiClient.convertToType(data['ordersId'], [Object]);
            }
        }
        return obj;
    }


}

/**
 * Поле в которое наследуем данные размеров коробок
 * @member {Number} lengthCm
 */
InlineResponse2011.prototype['lengthCm'] = undefined;

/**
 * Поле в которое наследуем данные размеров коробок
 * @member {Number} widthCm
 */
InlineResponse2011.prototype['widthCm'] = undefined;

/**
 * Поле в которое наследуем данные размеров коробок
 * @member {Number} heightCm
 */
InlineResponse2011.prototype['heightCm'] = undefined;

/**
 * Общий вес кг коробки
 * @member {Number} weighGrossKg
 */
InlineResponse2011.prototype['weighGrossKg'] = undefined;

/**
 * Объемный вес (подсчет)
 * @member {Number} volumeWeightKg
 */
InlineResponse2011.prototype['volumeWeightKg'] = undefined;

/**
 * Наибольший вес (подсчет)
 * @member {Number} weightFinalAccountingKg
 */
InlineResponse2011.prototype['weightFinalAccountingKg'] = undefined;

/**
 * Ссылка на наклейку для коробки
 * @member {String} shippingLabel
 */
InlineResponse2011.prototype['shippingLabel'] = undefined;

/**
 * Ид шипмент плана ( не обязательное поле)
 * @member {String} shipmentPlanId
 */
InlineResponse2011.prototype['shipmentPlanId'] = undefined;

/**
 * id склада - склады куда отправляют 
 * @member {Number} warehouse
 */
InlineResponse2011.prototype['warehouse'] = undefined;

/**
 * Комментарий к коробке
 * @member {String} clientComment
 */
InlineResponse2011.prototype['clientComment'] = undefined;

/**
 * Метод доставки - 1: Air , 2: Sea
 * @member {Number} deliveryMethod
 */
InlineResponse2011.prototype['deliveryMethod'] = undefined;

/**
 * Размеры которые назвал поставщик при заказе ( могут отличаться с реальными).
 * @member {Number} lengthCmSupplier
 */
InlineResponse2011.prototype['lengthCmSupplier'] = undefined;

/**
 * Размеры которые назвал поставщик при заказе ( могут отличаться с реальными).
 * @member {Number} widthCmSupplier
 */
InlineResponse2011.prototype['widthCmSupplier'] = undefined;

/**
 * Размеры которые назвал поставщик при заказе ( могут отличаться с реальными).
 * @member {Number} heightCmSupplier
 */
InlineResponse2011.prototype['heightCmSupplier'] = undefined;

/**
 * Общий вес кг коробки который назвал поставщик.
 * @member {Number} weighGrossKgSupplier
 */
InlineResponse2011.prototype['weighGrossKgSupplier'] = undefined;

/**
 * id склада - склады куда отправляют 
 * @member {Number} volumeWeightKgSupplier
 */
InlineResponse2011.prototype['volumeWeightKgSupplier'] = undefined;

/**
 * Наибольший вес (подсчет) (что большее объемный или обычный вес) у поставщика.
 * @member {Number} weightFinalAccountingKgSupplier
 */
InlineResponse2011.prototype['weightFinalAccountingKgSupplier'] = undefined;

/**
 * Объемный вес (подсчет) на размерах от поставщика (формула)
 * @member {String} buyerComment
 */
InlineResponse2011.prototype['buyerComment'] = undefined;

/**
 * Текущий статус коробки.
 * @member {Number} status
 */
InlineResponse2011.prototype['status'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} lengthCmWarehouse
 */
InlineResponse2011.prototype['lengthCmWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} widthCmWarehouse
 */
InlineResponse2011.prototype['widthCmWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} heightCmWarehouse
 */
InlineResponse2011.prototype['heightCmWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} weighGrossKgWarehouse
 */
InlineResponse2011.prototype['weighGrossKgWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} volumeWeightKgWarehouse
 */
InlineResponse2011.prototype['volumeWeightKgWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} weightFinalAccountingKgWarehouse
 */
InlineResponse2011.prototype['weightFinalAccountingKgWarehouse'] = undefined;

/**
 * Клиент создавший заказ и коробку.
 * @member {String} createdBy
 */
InlineResponse2011.prototype['createdBy'] = undefined;

/**
 * Байер взявший коробку в работу.
 * @member {String} buyerId
 */
InlineResponse2011.prototype['buyerId'] = undefined;

/**
 * GUID любого, кто последний редактировал коробку.
 * @member {String} lastModifiedBy
 */
InlineResponse2011.prototype['lastModifiedBy'] = undefined;

/**
 * Массив GUID ордеров из которых формируется данная коробка.
 * @member {Array.<Object>} ordersId
 */
InlineResponse2011.prototype['ordersId'] = undefined;






export default InlineResponse2011;

