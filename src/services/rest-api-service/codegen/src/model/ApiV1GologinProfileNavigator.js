/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiV1GologinProfileNavigator model module.
 * @module model/ApiV1GologinProfileNavigator
 * @version 0.1.0
 */
class ApiV1GologinProfileNavigator {
    /**
     * Constructs a new <code>ApiV1GologinProfileNavigator</code>.
     * @alias module:model/ApiV1GologinProfileNavigator
     */
    constructor() { 
        
        ApiV1GologinProfileNavigator.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ApiV1GologinProfileNavigator</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiV1GologinProfileNavigator} obj Optional instance to populate.
     * @return {module:model/ApiV1GologinProfileNavigator} The populated <code>ApiV1GologinProfileNavigator</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiV1GologinProfileNavigator();

            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('userAgent')) {
                obj['userAgent'] = ApiClient.convertToType(data['userAgent'], 'String');
            }
            if (data.hasOwnProperty('resolution')) {
                obj['resolution'] = ApiClient.convertToType(data['resolution'], 'String');
            }
            if (data.hasOwnProperty('platform')) {
                obj['platform'] = ApiClient.convertToType(data['platform'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Язык
 * @member {String} language
 * @default 'enUS'
 */
ApiV1GologinProfileNavigator.prototype['language'] = 'enUS';

/**
 * Браузер. Включая рандомный.
 * @member {String} userAgent
 * @default 'random'
 */
ApiV1GologinProfileNavigator.prototype['userAgent'] = 'random';

/**
 * Разрешение экрана
 * @member {String} resolution
 * @default '1024x768'
 */
ApiV1GologinProfileNavigator.prototype['resolution'] = '1024x768';

/**
 * ID платформы
 * @member {String} platform
 * @default 'mac'
 */
ApiV1GologinProfileNavigator.prototype['platform'] = 'mac';






export default ApiV1GologinProfileNavigator;

