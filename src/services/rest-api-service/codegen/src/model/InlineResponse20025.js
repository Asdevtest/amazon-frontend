/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiV1AdminsGetProductsByStatusCreatedBy from './ApiV1AdminsGetProductsByStatusCreatedBy';
import ApiV1AdminsOrdersDestination from './ApiV1AdminsOrdersDestination';
import ApiV1BuyersOrdersMyOrderSupplier from './ApiV1BuyersOrdersMyOrderSupplier';
import ApiV1BuyersOrdersMyPayments from './ApiV1BuyersOrdersMyPayments';
import ApiV1BuyersOrdersMyProduct from './ApiV1BuyersOrdersMyProduct';

/**
 * The InlineResponse20025 model module.
 * @module model/InlineResponse20025
 * @version 0.1.0
 */
class InlineResponse20025 {
    /**
     * Constructs a new <code>InlineResponse20025</code>.
     * Заказ.
     * @alias module:model/InlineResponse20025
     */
    constructor() { 
        
        InlineResponse20025.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineResponse20025</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse20025} obj Optional instance to populate.
     * @return {module:model/InlineResponse20025} The populated <code>InlineResponse20025</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse20025();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('clientComment')) {
                obj['clientComment'] = ApiClient.convertToType(data['clientComment'], 'String');
            }
            if (data.hasOwnProperty('buyerComment')) {
                obj['buyerComment'] = ApiClient.convertToType(data['buyerComment'], 'String');
            }
            if (data.hasOwnProperty('destination')) {
                obj['destination'] = ApiV1AdminsOrdersDestination.constructFromObject(data['destination']);
            }
            if (data.hasOwnProperty('item')) {
                obj['item'] = ApiClient.convertToType(data['item'], 'String');
            }
            if (data.hasOwnProperty('priceInYuan')) {
                obj['priceInYuan'] = ApiClient.convertToType(data['priceInYuan'], 'Number');
            }
            if (data.hasOwnProperty('partialPaymentAmountRmb')) {
                obj['partialPaymentAmountRmb'] = ApiClient.convertToType(data['partialPaymentAmountRmb'], 'Number');
            }
            if (data.hasOwnProperty('paymentDetailsAttached')) {
                obj['paymentDetailsAttached'] = ApiClient.convertToType(data['paymentDetailsAttached'], 'Boolean');
            }
            if (data.hasOwnProperty('payments')) {
                obj['payments'] = ApiClient.convertToType(data['payments'], [ApiV1BuyersOrdersMyPayments]);
            }
            if (data.hasOwnProperty('orderSupplier')) {
                obj['orderSupplier'] = ApiV1BuyersOrdersMyOrderSupplier.constructFromObject(data['orderSupplier']);
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'String');
            }
            if (data.hasOwnProperty('expressChinaDelivery')) {
                obj['expressChinaDelivery'] = ApiClient.convertToType(data['expressChinaDelivery'], 'Boolean');
            }
            if (data.hasOwnProperty('needsResearch')) {
                obj['needsResearch'] = ApiClient.convertToType(data['needsResearch'], 'Boolean');
            }
            if (data.hasOwnProperty('deadline')) {
                obj['deadline'] = ApiClient.convertToType(data['deadline'], 'Date');
            }
            if (data.hasOwnProperty('paymentDateToSupplier')) {
                obj['paymentDateToSupplier'] = ApiClient.convertToType(data['paymentDateToSupplier'], 'String');
            }
            if (data.hasOwnProperty('totalPrice')) {
                obj['totalPrice'] = ApiClient.convertToType(data['totalPrice'], 'Number');
            }
            if (data.hasOwnProperty('totalPriceChanged')) {
                obj['totalPriceChanged'] = ApiClient.convertToType(data['totalPriceChanged'], 'Number');
            }
            if (data.hasOwnProperty('createdById')) {
                obj['createdById'] = ApiClient.convertToType(data['createdById'], 'String');
            }
            if (data.hasOwnProperty('storekeeper')) {
                obj['storekeeper'] = ApiV1AdminsGetProductsByStatusCreatedBy.constructFromObject(data['storekeeper']);
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ApiV1BuyersOrdersMyProduct.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
        }
        return obj;
    }


}

/**
 * id заказ.
 * @member {Number} id
 */
InlineResponse20025.prototype['id'] = undefined;

/**
 * GUID данной записи в БД.
 * @member {String} _id
 */
InlineResponse20025.prototype['_id'] = undefined;

/**
 * кол-во
 * @member {Number} amount
 */
InlineResponse20025.prototype['amount'] = undefined;

/**
 * Комментарии клиента.
 * @member {String} clientComment
 */
InlineResponse20025.prototype['clientComment'] = undefined;

/**
 * комментарии байера.
 * @member {String} buyerComment
 */
InlineResponse20025.prototype['buyerComment'] = undefined;

/**
 * @member {module:model/ApiV1AdminsOrdersDestination} destination
 */
InlineResponse20025.prototype['destination'] = undefined;

/**
 * @member {String} item
 */
InlineResponse20025.prototype['item'] = undefined;

/**
 * Цена в юанях
 * @member {Number} priceInYuan
 */
InlineResponse20025.prototype['priceInYuan'] = undefined;

/**
 * Сумма частичной оплаты
 * @member {Number} partialPaymentAmountRmb
 */
InlineResponse20025.prototype['partialPaymentAmountRmb'] = undefined;

/**
 * Есть ли реквизиты в ордере
 * @member {Boolean} paymentDetailsAttached
 */
InlineResponse20025.prototype['paymentDetailsAttached'] = undefined;

/**
 * @member {Array.<module:model/ApiV1BuyersOrdersMyPayments>} payments
 */
InlineResponse20025.prototype['payments'] = undefined;

/**
 * @member {module:model/ApiV1BuyersOrdersMyOrderSupplier} orderSupplier
 */
InlineResponse20025.prototype['orderSupplier'] = undefined;

/**
 * Приоритет заказа: от 10 до 50 - от найменее значимого до найболее значимого соответственно
 * @member {module:model/InlineResponse20025.PriorityEnum} priority
 */
InlineResponse20025.prototype['priority'] = undefined;

/**
 * Флаг , обозначающий оплату за экспресс доставку по китаю
 * @member {Boolean} expressChinaDelivery
 */
InlineResponse20025.prototype['expressChinaDelivery'] = undefined;

/**
 * Нуждается ли заказ в повторном поиске поставщика
 * @member {Boolean} needsResearch
 */
InlineResponse20025.prototype['needsResearch'] = undefined;

/**
 * Дедлайн выкупа заказа
 * @member {Date} deadline
 */
InlineResponse20025.prototype['deadline'] = undefined;

/**
 * Дата оплаты поставщтку
 * @member {String} paymentDateToSupplier
 */
InlineResponse20025.prototype['paymentDateToSupplier'] = undefined;

/**
 * Сумма оплаты $ за партию товара - это сумма в $ указывается закупщиком
 * @member {Number} totalPrice
 */
InlineResponse20025.prototype['totalPrice'] = undefined;

/**
 * Если вдруг байер понял что стоимость заказа меняется в меньшую/большую сторону он напишет эту сумму в заказе в поле totalPriceChanged (нужно добавить это поле), далее корректировка стоимости решается через админа. 
 * @member {Number} totalPriceChanged
 */
InlineResponse20025.prototype['totalPriceChanged'] = undefined;

/**
 * @member {String} createdById
 */
InlineResponse20025.prototype['createdById'] = undefined;

/**
 * @member {module:model/ApiV1AdminsGetProductsByStatusCreatedBy} storekeeper
 */
InlineResponse20025.prototype['storekeeper'] = undefined;

/**
 * @member {module:model/ApiV1BuyersOrdersMyProduct} product
 */
InlineResponse20025.prototype['product'] = undefined;

/**
 *    formed: 0,  Корзина - статус \"Формируется\"      new: 1,  Клиент создал заказ - статус \"Новый\"      readyToProcess: 10,  Заказ доступен к обработке закупщиком (через 15минут после того как он был сделан, приобрёл статус Новый ) - статус \"доступен для обработки\"      atProcess: 15,  Закупщик взял заказ в обработку - статус \"в обработке\"        Варианты обработки - \"Что-то не так - требуется уточнение у клиента\" - уведомить клиента. - закупщику контрольное         уведомление (т.к. будет суброль)        Необходим поиск нового поставщика. - уведомить клиента. - закупщику контрольное уведомление (т.к. будет суброль)      needConfirmingToPriceChange: 19,  \"требуется подтверждение для изменения цены \"        paid: 20, закупщик оплатил заказ - статус \"оплачен\"       trackNumberIssued: 25, выдан и принят трек номер - статус \"выдан трек номер\"      needConfirmingReceiving: 27 - Этот статус промежуточный между 25 и 30     С этого статуса заказ можно переводить в статусы 25,30,35     inStock: 30, Товар пришёл на склад - \"Пришёл на склад\"      canceledByBuyer: 35, // Отменен байером      canceledByClient: 40 // Отменен байером отменем клиентом, можно выстаить только для вакантных или тех котрорые ожидают доплаты. (10, 19)   
 * @member {Number} status
 */
InlineResponse20025.prototype['status'] = undefined;

/**
 * @member {Date} createdAt
 */
InlineResponse20025.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
InlineResponse20025.prototype['updatedAt'] = undefined;





/**
 * Allowed values for the <code>priority</code> property.
 * @enum {String}
 * @readonly
 */
InlineResponse20025['PriorityEnum'] = {

    /**
     * value: "10"
     * @const
     */
    "10": "10",

    /**
     * value: "20"
     * @const
     */
    "20": "20",

    /**
     * value: "30"
     * @const
     */
    "30": "30",

    /**
     * value: "40"
     * @const
     */
    "40": "40",

    /**
     * value: "50"
     * @const
     */
    "50": "50"
};



export default InlineResponse20025;

