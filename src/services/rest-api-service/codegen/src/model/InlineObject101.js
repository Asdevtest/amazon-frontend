/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject101 model module.
 * @module model/InlineObject101
 * @version 0.1.0
 */
class InlineObject101 {
    /**
     * Constructs a new <code>InlineObject101</code>.
     * @alias module:model/InlineObject101
     * @param fileLink {String} Ссылка на файл
     */
    constructor(fileLink) { 
        
        InlineObject101.initialize(this, fileLink);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, fileLink) { 
        obj['fileLink'] = fileLink;
    }

    /**
     * Constructs a <code>InlineObject101</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject101} obj Optional instance to populate.
     * @return {module:model/InlineObject101} The populated <code>InlineObject101</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject101();

            if (data.hasOwnProperty('requestId')) {
                obj['requestId'] = ApiClient.convertToType(data['requestId'], 'String');
            }
            if (data.hasOwnProperty('proposalId')) {
                obj['proposalId'] = ApiClient.convertToType(data['proposalId'], 'String');
            }
            if (data.hasOwnProperty('commentByClient')) {
                obj['commentByClient'] = ApiClient.convertToType(data['commentByClient'], 'String');
            }
            if (data.hasOwnProperty('commentByPerformer')) {
                obj['commentByPerformer'] = ApiClient.convertToType(data['commentByPerformer'], 'String');
            }
            if (data.hasOwnProperty('fileLink')) {
                obj['fileLink'] = ApiClient.convertToType(data['fileLink'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Guid заявки
 * @member {String} requestId
 */
InlineObject101.prototype['requestId'] = undefined;

/**
 * Guid предложения
 * @member {String} proposalId
 */
InlineObject101.prototype['proposalId'] = undefined;

/**
 * комментарий клиента
 * @member {String} commentByClient
 */
InlineObject101.prototype['commentByClient'] = undefined;

/**
 * комментарий исполнителя
 * @member {String} commentByPerformer
 */
InlineObject101.prototype['commentByPerformer'] = undefined;

/**
 * Ссылка на файл
 * @member {String} fileLink
 */
InlineObject101.prototype['fileLink'] = undefined;






export default InlineObject101;

