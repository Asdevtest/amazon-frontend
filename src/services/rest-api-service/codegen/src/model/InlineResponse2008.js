/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineResponse2008 model module.
 * @module model/InlineResponse2008
 * @version v0.0.1
 */
class InlineResponse2008 {
    /**
     * Constructs a new <code>InlineResponse2008</code>.
     * Схема парсинга данных с амазона.
     * @alias module:model/InlineResponse2008
     * @param id {String} id продукта(asin)
     * @param images {Array.<String>} массив с именами файлов
     * @param title {String} Заголовок продукта
     * @param about {String} О продукте.
     * @param description {String} Описание
     * @param price {String} Цена.
     * @param availability {String} Доступность.
     * @param detail {String} Детали.
     * @param asin {String} ASIN
     * @param bsr {String} BSR
     * @param weight {String} Вес.
     */
    constructor(id, images, title, about, description, price, availability, detail, asin, bsr, weight) { 
        
        InlineResponse2008.initialize(this, id, images, title, about, description, price, availability, detail, asin, bsr, weight);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, images, title, about, description, price, availability, detail, asin, bsr, weight) { 
        obj['id'] = id;
        obj['images'] = images;
        obj['title'] = title;
        obj['about'] = about;
        obj['description'] = description;
        obj['price'] = price;
        obj['availability'] = availability;
        obj['detail'] = detail;
        obj['asin'] = asin;
        obj['bsr'] = bsr;
        obj['weight'] = weight;
    }

    /**
     * Constructs a <code>InlineResponse2008</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2008} obj Optional instance to populate.
     * @return {module:model/InlineResponse2008} The populated <code>InlineResponse2008</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2008();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('about')) {
                obj['about'] = ApiClient.convertToType(data['about'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'String');
            }
            if (data.hasOwnProperty('availability')) {
                obj['availability'] = ApiClient.convertToType(data['availability'], 'String');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('asin')) {
                obj['asin'] = ApiClient.convertToType(data['asin'], 'String');
            }
            if (data.hasOwnProperty('bsr')) {
                obj['bsr'] = ApiClient.convertToType(data['bsr'], 'String');
            }
            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'String');
            }
        }
        return obj;
    }


}

/**
 * id продукта(asin)
 * @member {String} id
 */
InlineResponse2008.prototype['id'] = undefined;

/**
 * массив с именами файлов
 * @member {Array.<String>} images
 */
InlineResponse2008.prototype['images'] = undefined;

/**
 * Заголовок продукта
 * @member {String} title
 */
InlineResponse2008.prototype['title'] = undefined;

/**
 * О продукте.
 * @member {String} about
 */
InlineResponse2008.prototype['about'] = undefined;

/**
 * Описание
 * @member {String} description
 */
InlineResponse2008.prototype['description'] = undefined;

/**
 * Цена.
 * @member {String} price
 */
InlineResponse2008.prototype['price'] = undefined;

/**
 * Доступность.
 * @member {String} availability
 */
InlineResponse2008.prototype['availability'] = undefined;

/**
 * Детали.
 * @member {String} detail
 */
InlineResponse2008.prototype['detail'] = undefined;

/**
 * ASIN
 * @member {String} asin
 */
InlineResponse2008.prototype['asin'] = undefined;

/**
 * BSR
 * @member {String} bsr
 */
InlineResponse2008.prototype['bsr'] = undefined;

/**
 * Вес.
 * @member {String} weight
 */
InlineResponse2008.prototype['weight'] = undefined;






export default InlineResponse2008;

