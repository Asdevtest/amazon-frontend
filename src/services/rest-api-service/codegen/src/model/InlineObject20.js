/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject20 model module.
 * @module model/InlineObject20
 * @version 0.1.0
 */
class InlineObject20 {
    /**
     * Constructs a new <code>InlineObject20</code>.
     * @alias module:model/InlineObject20
     */
    constructor() { 
        
        InlineObject20.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject20</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject20} obj Optional instance to populate.
     * @return {module:model/InlineObject20} The populated <code>InlineObject20</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject20();

            if (data.hasOwnProperty('destinationId')) {
                obj['destinationId'] = ApiClient.convertToType(data['destinationId'], 'String');
            }
            if (data.hasOwnProperty('logicsTariffId')) {
                obj['logicsTariffId'] = ApiClient.convertToType(data['logicsTariffId'], 'String');
            }
            if (data.hasOwnProperty('fbaShipment')) {
                obj['fbaShipment'] = ApiClient.convertToType(data['fbaShipment'], 'String');
            }
            if (data.hasOwnProperty('shippingLabel')) {
                obj['shippingLabel'] = ApiClient.convertToType(data['shippingLabel'], 'String');
            }
            if (data.hasOwnProperty('isShippingLabelAttachedByStorekeeper')) {
                obj['isShippingLabelAttachedByStorekeeper'] = ApiClient.convertToType(data['isShippingLabelAttachedByStorekeeper'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * GUID пункта назначения коробки
 * @member {String} destinationId
 */
InlineObject20.prototype['destinationId'] = undefined;

/**
 * GUID тарифа к сторкипера
 * @member {String} logicsTariffId
 */
InlineObject20.prototype['logicsTariffId'] = undefined;

/**
 * Это номер конкретной коробки при отправке в амазон.
 * @member {String} fbaShipment
 */
InlineObject20.prototype['fbaShipment'] = undefined;

/**
 * shippingLabel коробки
 * @member {String} shippingLabel
 */
InlineObject20.prototype['shippingLabel'] = undefined;

/**
 * shippingLabel проклеен сторкипером
 * @member {Boolean} isShippingLabelAttachedByStorekeeper
 */
InlineObject20.prototype['isShippingLabelAttachedByStorekeeper'] = undefined;






export default InlineObject20;

