/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PermissionGroupPostDtoSchema model module.
 * @module model/PermissionGroupPostDtoSchema
 * @version 0.1.0
 */
class PermissionGroupPostDtoSchema {
    /**
     * Constructs a new <code>PermissionGroupPostDtoSchema</code>.
     * Создать группу permission
     * @alias module:model/PermissionGroupPostDtoSchema
     * @param key {String} Ключ группы permission
     * @param title {String} Простое название
     * @param description {String} Описание permission
     * @param role {Number} Роль для которого данной группы permission-ов
     */
    constructor(key, title, description, role) { 
        
        PermissionGroupPostDtoSchema.initialize(this, key, title, description, role);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, key, title, description, role) { 
        obj['key'] = key;
        obj['title'] = title;
        obj['description'] = description;
        obj['role'] = role;
    }

    /**
     * Constructs a <code>PermissionGroupPostDtoSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PermissionGroupPostDtoSchema} obj Optional instance to populate.
     * @return {module:model/PermissionGroupPostDtoSchema} The populated <code>PermissionGroupPostDtoSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PermissionGroupPostDtoSchema();

            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('permissions')) {
                obj['permissions'] = ApiClient.convertToType(data['permissions'], ['String']);
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Ключ группы permission
 * @member {String} key
 */
PermissionGroupPostDtoSchema.prototype['key'] = undefined;

/**
 * Простое название
 * @member {String} title
 */
PermissionGroupPostDtoSchema.prototype['title'] = undefined;

/**
 * Описание permission
 * @member {String} description
 */
PermissionGroupPostDtoSchema.prototype['description'] = undefined;

/**
 * @member {Array.<String>} permissions
 */
PermissionGroupPostDtoSchema.prototype['permissions'] = undefined;

/**
 * Роль для которого данной группы permission-ов
 * @member {Number} role
 */
PermissionGroupPostDtoSchema.prototype['role'] = undefined;






export default PermissionGroupPostDtoSchema;

