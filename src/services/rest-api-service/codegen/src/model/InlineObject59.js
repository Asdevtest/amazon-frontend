/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject59 model module.
 * @module model/InlineObject59
 * @version 0.1.0
 */
class InlineObject59 {
    /**
     * Constructs a new <code>InlineObject59</code>.
     * @alias module:model/InlineObject59
     */
    constructor() { 
        
        InlineObject59.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject59</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject59} obj Optional instance to populate.
     * @return {module:model/InlineObject59} The populated <code>InlineObject59</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject59();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ApiClient.convertToType(data['media'], [Object]);
            }
            if (data.hasOwnProperty('comments')) {
                obj['comments'] = ApiClient.convertToType(data['comments'], 'String');
            }
            if (data.hasOwnProperty('productName')) {
                obj['productName'] = ApiClient.convertToType(data['productName'], 'String');
            }
            if (data.hasOwnProperty('productLinks')) {
                obj['productLinks'] = ApiClient.convertToType(data['productLinks'], [Object]);
            }
            if (data.hasOwnProperty('criteria')) {
                obj['criteria'] = ApiClient.convertToType(data['criteria'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
            if (data.hasOwnProperty('height')) {
                obj['height'] = ApiClient.convertToType(data['height'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Название идеи
 * @member {String} title
 */
InlineObject59.prototype['title'] = undefined;

/**
 * Статус идеи
 * @member {Number} status
 */
InlineObject59.prototype['status'] = undefined;

/**
 * Images URLs
 * @member {Array.<Object>} media
 */
InlineObject59.prototype['media'] = undefined;

/**
 * Комментарий к идее
 * @member {String} comments
 */
InlineObject59.prototype['comments'] = undefined;

/**
 * Назавние продукта
 * @member {String} productName
 */
InlineObject59.prototype['productName'] = undefined;

/**
 * Ссылки на продукт, если есть
 * @member {Array.<Object>} productLinks
 */
InlineObject59.prototype['productLinks'] = undefined;

/**
 * Дополнительные критерии для поиска товара
 * @member {String} criteria
 */
InlineObject59.prototype['criteria'] = undefined;

/**
 * Количество товаров
 * @member {Number} quantity
 */
InlineObject59.prototype['quantity'] = undefined;

/**
 * Желаемая цена
 * @member {Number} price
 */
InlineObject59.prototype['price'] = undefined;

/**
 * Ширина, см
 * @member {Number} width
 */
InlineObject59.prototype['width'] = undefined;

/**
 * Высота, см
 * @member {Number} height
 */
InlineObject59.prototype['height'] = undefined;

/**
 * Длина, см
 * @member {Number} length
 */
InlineObject59.prototype['length'] = undefined;






export default InlineObject59;

