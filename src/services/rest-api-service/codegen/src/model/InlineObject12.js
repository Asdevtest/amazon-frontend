/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiV1BoxesItems from './ApiV1BoxesItems';

/**
 * The InlineObject12 model module.
 * @module model/InlineObject12
 * @version 0.1.0
 */
class InlineObject12 {
    /**
     * Constructs a new <code>InlineObject12</code>.
     * Коробка
     * @alias module:model/InlineObject12
     * @param items {Array.<module:model/ApiV1BoxesItems>} Массив коробок.
     */
    constructor(items) { 
        
        InlineObject12.initialize(this, items);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, items) { 
        obj['items'] = items;
    }

    /**
     * Constructs a <code>InlineObject12</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject12} obj Optional instance to populate.
     * @return {module:model/InlineObject12} The populated <code>InlineObject12</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject12();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('isDraft')) {
                obj['isDraft'] = ApiClient.convertToType(data['isDraft'], 'Boolean');
            }
            if (data.hasOwnProperty('lengthCmSupplier')) {
                obj['lengthCmSupplier'] = ApiClient.convertToType(data['lengthCmSupplier'], 'Number');
            }
            if (data.hasOwnProperty('widthCmSupplier')) {
                obj['widthCmSupplier'] = ApiClient.convertToType(data['widthCmSupplier'], 'Number');
            }
            if (data.hasOwnProperty('heightCmSupplier')) {
                obj['heightCmSupplier'] = ApiClient.convertToType(data['heightCmSupplier'], 'Number');
            }
            if (data.hasOwnProperty('weighGrossKgSupplier')) {
                obj['weighGrossKgSupplier'] = ApiClient.convertToType(data['weighGrossKgSupplier'], 'Number');
            }
            if (data.hasOwnProperty('lengthCmWarehouse')) {
                obj['lengthCmWarehouse'] = ApiClient.convertToType(data['lengthCmWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('widthCmWarehouse')) {
                obj['widthCmWarehouse'] = ApiClient.convertToType(data['widthCmWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('heightCmWarehouse')) {
                obj['heightCmWarehouse'] = ApiClient.convertToType(data['heightCmWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('weighGrossKgWarehouse')) {
                obj['weighGrossKgWarehouse'] = ApiClient.convertToType(data['weighGrossKgWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('isShippingLabelAttachedByStorekeeper')) {
                obj['isShippingLabelAttachedByStorekeeper'] = ApiClient.convertToType(data['isShippingLabelAttachedByStorekeeper'], 'Boolean');
            }
            if (data.hasOwnProperty('fbaShipment')) {
                obj['fbaShipment'] = ApiClient.convertToType(data['fbaShipment'], 'String');
            }
            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [ApiV1BoxesItems]);
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
            if (data.hasOwnProperty('destinationId')) {
                obj['destinationId'] = ApiClient.convertToType(data['destinationId'], 'String');
            }
            if (data.hasOwnProperty('logicsTariffId')) {
                obj['logicsTariffId'] = ApiClient.convertToType(data['logicsTariffId'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Сколько таких же коробок в одной коробке
 * @member {Number} amount
 */
InlineObject12.prototype['amount'] = undefined;

/**
 * true - если создаем черновик заказа.
 * @member {Boolean} isDraft
 */
InlineObject12.prototype['isDraft'] = undefined;

/**
 * Размеры которые назвал поставщик при заказе ( могут отличаться с реальными).
 * @member {Number} lengthCmSupplier
 */
InlineObject12.prototype['lengthCmSupplier'] = undefined;

/**
 * Размеры которые назвал поставщик при заказе ( могут отличаться с реальными).
 * @member {Number} widthCmSupplier
 */
InlineObject12.prototype['widthCmSupplier'] = undefined;

/**
 * Размеры которые назвал поставщик при заказе ( могут отличаться с реальными).
 * @member {Number} heightCmSupplier
 */
InlineObject12.prototype['heightCmSupplier'] = undefined;

/**
 * Общий вес кг коробки который назвал поставщик.
 * @member {Number} weighGrossKgSupplier
 */
InlineObject12.prototype['weighGrossKgSupplier'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} lengthCmWarehouse
 */
InlineObject12.prototype['lengthCmWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} widthCmWarehouse
 */
InlineObject12.prototype['widthCmWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} heightCmWarehouse
 */
InlineObject12.prototype['heightCmWarehouse'] = undefined;

/**
 * Что фактически пришло на склад. Кладовщик.
 * @member {Number} weighGrossKgWarehouse
 */
InlineObject12.prototype['weighGrossKgWarehouse'] = undefined;

/**
 * Поле будет указывать на то что при решении задачи сторкипером на обновление коробок что он проклеил шиппинг лейбл.
 * @member {Boolean} isShippingLabelAttachedByStorekeeper
 */
InlineObject12.prototype['isShippingLabelAttachedByStorekeeper'] = undefined;

/**
 * Это номер конкретной коробки при отправке в амазон.
 * @member {String} fbaShipment
 */
InlineObject12.prototype['fbaShipment'] = undefined;

/**
 * Массив коробок.
 * @member {Array.<module:model/ApiV1BoxesItems>} items
 */
InlineObject12.prototype['items'] = undefined;

/**
 * Массив ссылок на фотографии.
 * @member {Array.<String>} images
 */
InlineObject12.prototype['images'] = undefined;

/**
 * destination GUID 
 * @member {String} destinationId
 */
InlineObject12.prototype['destinationId'] = undefined;

/**
 *  logicsTariff GUID
 * @member {String} logicsTariffId
 */
InlineObject12.prototype['logicsTariffId'] = undefined;






export default InlineObject12;

