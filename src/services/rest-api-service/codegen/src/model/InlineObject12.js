/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject12 model module.
 * @module model/InlineObject12
 * @version 0.1.0
 */
class InlineObject12 {
    /**
     * Constructs a new <code>InlineObject12</code>.
     * @alias module:model/InlineObject12
     * @param boxesIds {Array.<String>} 
     */
    constructor(boxesIds) { 
        
        InlineObject12.initialize(this, boxesIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, boxesIds) { 
        obj['boxesIds'] = boxesIds;
    }

    /**
     * Constructs a <code>InlineObject12</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject12} obj Optional instance to populate.
     * @return {module:model/InlineObject12} The populated <code>InlineObject12</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject12();

            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('boxesIds')) {
                obj['boxesIds'] = ApiClient.convertToType(data['boxesIds'], ['String']);
            }
            if (data.hasOwnProperty('calculationMethod')) {
                obj['calculationMethod'] = ApiClient.convertToType(data['calculationMethod'], 'Number');
            }
            if (data.hasOwnProperty('volumeWeightDivide')) {
                obj['volumeWeightDivide'] = ApiClient.convertToType(data['volumeWeightDivide'], 'Number');
            }
            if (data.hasOwnProperty('actualShippingCost')) {
                obj['actualShippingCost'] = ApiClient.convertToType(data['actualShippingCost'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Название партии
 * @member {String} title
 */
InlineObject12.prototype['title'] = undefined;

/**
 * @member {Array.<String>} boxesIds
 */
InlineObject12.prototype['boxesIds'] = undefined;

/**
 * Метод подсчта массы партии
 * @member {Number} calculationMethod
 */
InlineObject12.prototype['calculationMethod'] = undefined;

/**
 * Делитель объема партии
 * @member {Number} volumeWeightDivide
 */
InlineObject12.prototype['volumeWeightDivide'] = undefined;

/**
 * Настоящая стоимость доставки
 * @member {Number} actualShippingCost
 */
InlineObject12.prototype['actualShippingCost'] = undefined;






export default InlineObject12;

