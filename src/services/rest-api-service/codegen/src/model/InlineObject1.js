/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject1 model module.
 * @module model/InlineObject1
 * @version 0.1.0
 */
class InlineObject1 {
    /**
     * Constructs a new <code>InlineObject1</code>.
     * @alias module:model/InlineObject1
     * @param recipientId {String} GUID пользователя.
     * @param sum {Number} Начисленная сумма выплаты. Может быть отрицательной.
     * @param comment {String} комментарий
     */
    constructor(recipientId, sum, comment) { 
        
        InlineObject1.initialize(this, recipientId, sum, comment);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, recipientId, sum, comment) { 
        obj['recipientId'] = recipientId;
        obj['sum'] = sum;
        obj['comment'] = comment;
    }

    /**
     * Constructs a <code>InlineObject1</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject1} obj Optional instance to populate.
     * @return {module:model/InlineObject1} The populated <code>InlineObject1</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject1();

            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'String');
            }
            if (data.hasOwnProperty('recipientId')) {
                obj['recipientId'] = ApiClient.convertToType(data['recipientId'], 'String');
            }
            if (data.hasOwnProperty('sum')) {
                obj['sum'] = ApiClient.convertToType(data['sum'], 'Number');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
        }
        return obj;
    }


}

/**
 * GUID продукта.
 * @member {String} productId
 */
InlineObject1.prototype['productId'] = undefined;

/**
 * GUID пользователя.
 * @member {String} recipientId
 */
InlineObject1.prototype['recipientId'] = undefined;

/**
 * Начисленная сумма выплаты. Может быть отрицательной.
 * @member {Number} sum
 */
InlineObject1.prototype['sum'] = undefined;

/**
 * комментарий
 * @member {String} comment
 */
InlineObject1.prototype['comment'] = undefined;






export default InlineObject1;

