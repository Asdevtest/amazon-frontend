/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject96 model module.
 * @module model/InlineObject96
 * @version 0.1.0
 */
class InlineObject96 {
    /**
     * Constructs a new <code>InlineObject96</code>.
     * @alias module:model/InlineObject96
     */
    constructor() { 
        
        InlineObject96.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject96</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject96} obj Optional instance to populate.
     * @return {module:model/InlineObject96} The populated <code>InlineObject96</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject96();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('zipCode')) {
                obj['zipCode'] = ApiClient.convertToType(data['zipCode'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('fontColor')) {
                obj['fontColor'] = ApiClient.convertToType(data['fontColor'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Название склада.
 * @member {String} name
 */
InlineObject96.prototype['name'] = undefined;

/**
 * Страна.
 * @member {String} country
 */
InlineObject96.prototype['country'] = undefined;

/**
 * Индекс. 5 цифр.
 * @member {String} zipCode
 */
InlineObject96.prototype['zipCode'] = undefined;

/**
 * Штат.
 * @member {String} state
 */
InlineObject96.prototype['state'] = undefined;

/**
 * Город.
 * @member {String} city
 */
InlineObject96.prototype['city'] = undefined;

/**
 * Адрес склада.
 * @member {String} address
 */
InlineObject96.prototype['address'] = undefined;

/**
 * Цвет шрифта
 * @member {String} fontColor
 */
InlineObject96.prototype['fontColor'] = undefined;






export default InlineObject96;

