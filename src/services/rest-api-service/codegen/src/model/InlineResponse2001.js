/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiV1AdminsOrdersCreatedBy from './ApiV1AdminsOrdersCreatedBy';
import InlineResponse200 from './InlineResponse200';

/**
 * The InlineResponse2001 model module.
 * @module model/InlineResponse2001
 * @version v0.0.1
 */
class InlineResponse2001 {
    /**
     * Constructs a new <code>InlineResponse2001</code>.
     * Заказ.
     * @alias module:model/InlineResponse2001
     * @param clientComment {String} Комментарии клиента.
     * @param warehouse {Number} Номер склада.
     * @param deliveryMethod {Number} Вид доставки.
     * @param deliveryCostToTheWarehouse {Number} Стоимость доставки до склада.
     * @param product {module:model/InlineResponse200} 
     */
    constructor(clientComment, warehouse, deliveryMethod, deliveryCostToTheWarehouse, product) { 
        
        InlineResponse2001.initialize(this, clientComment, warehouse, deliveryMethod, deliveryCostToTheWarehouse, product);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, clientComment, warehouse, deliveryMethod, deliveryCostToTheWarehouse, product) { 
        obj['clientComment'] = clientComment;
        obj['warehouse'] = warehouse;
        obj['deliveryMethod'] = deliveryMethod;
        obj['deliveryCostToTheWarehouse'] = deliveryCostToTheWarehouse;
        obj['product'] = product;
    }

    /**
     * Constructs a <code>InlineResponse2001</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2001} obj Optional instance to populate.
     * @return {module:model/InlineResponse2001} The populated <code>InlineResponse2001</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2001();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('buyerId')) {
                obj['buyerId'] = ApiClient.convertToType(data['buyerId'], 'String');
            }
            if (data.hasOwnProperty('clientComment')) {
                obj['clientComment'] = ApiClient.convertToType(data['clientComment'], 'String');
            }
            if (data.hasOwnProperty('buyerComment')) {
                obj['buyerComment'] = ApiClient.convertToType(data['buyerComment'], 'String');
            }
            if (data.hasOwnProperty('warehouse')) {
                obj['warehouse'] = ApiClient.convertToType(data['warehouse'], 'Number');
            }
            if (data.hasOwnProperty('deliveryMethod')) {
                obj['deliveryMethod'] = ApiClient.convertToType(data['deliveryMethod'], 'Number');
            }
            if (data.hasOwnProperty('fba')) {
                obj['fba'] = ApiClient.convertToType(data['fba'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('deliveryCostToTheWarehouse')) {
                obj['deliveryCostToTheWarehouse'] = ApiClient.convertToType(data['deliveryCostToTheWarehouse'], 'Number');
            }
            if (data.hasOwnProperty('isBarCodeAlreadyAttachedByTheSupplier')) {
                obj['isBarCodeAlreadyAttachedByTheSupplier'] = ApiClient.convertToType(data['isBarCodeAlreadyAttachedByTheSupplier'], 'Boolean');
            }
            if (data.hasOwnProperty('isBarCodeAlreadyAttachedByTheSupplierConfirmedByStorekeeper')) {
                obj['isBarCodeAlreadyAttachedByTheSupplierConfirmedByStorekeeper'] = ApiClient.convertToType(data['isBarCodeAlreadyAttachedByTheSupplierConfirmedByStorekeeper'], 'Boolean');
            }
            if (data.hasOwnProperty('trackingNumberChina')) {
                obj['trackingNumberChina'] = ApiClient.convertToType(data['trackingNumberChina'], 'String');
            }
            if (data.hasOwnProperty('amountPaymentPerConsignmentAtDollars')) {
                obj['amountPaymentPerConsignmentAtDollars'] = ApiClient.convertToType(data['amountPaymentPerConsignmentAtDollars'], 'Number');
            }
            if (data.hasOwnProperty('totalPrice')) {
                obj['totalPrice'] = ApiClient.convertToType(data['totalPrice'], 'Number');
            }
            if (data.hasOwnProperty('totalPriceChanged')) {
                obj['totalPriceChanged'] = ApiClient.convertToType(data['totalPriceChanged'], 'Number');
            }
            if (data.hasOwnProperty('barCode')) {
                obj['barCode'] = ApiClient.convertToType(data['barCode'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = InlineResponse200.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('createdBy')) {
                obj['createdBy'] = ApiV1AdminsOrdersCreatedBy.constructFromObject(data['createdBy']);
            }
        }
        return obj;
    }


}




/**
 * Allowed values for the <code>status</code> property.
 * @enum {Number}
 * @readonly
 */
 InlineResponse2001['StatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 15
     * @const
     */
    "15": 15,

    /**
     * value: 20
     * @const
     */
    "20": 20,

    /**
     * value: 25
     * @const
     */
    "25": 25,

    /**
     * value: 30
     * @const
     */
    "30": 30,

    /**
     * value: 35
     * @const
     */
    "35": 35
};



/**
 * id заказ.
 * @member {Number} id
 */
InlineResponse2001.prototype['id'] = undefined;

/**
 * GUID данной записи в БД.
 * @member {String} _id
 */
InlineResponse2001.prototype['_id'] = undefined;

/**
 * GUID пользователя(байера)
 * @member {String} buyerId
 */
InlineResponse2001.prototype['buyerId'] = undefined;

/**
 * Комментарии клиента.
 * @member {String} clientComment
 */
InlineResponse2001.prototype['clientComment'] = undefined;

/**
 * комментарии байера.
 * @member {String} buyerComment
 */
InlineResponse2001.prototype['buyerComment'] = undefined;

/**
 * Номер склада.
 * @member {Number} warehouse
 */
InlineResponse2001.prototype['warehouse'] = undefined;

/**
 * Вид доставки.
 * @member {Number} deliveryMethod
 */
InlineResponse2001.prototype['deliveryMethod'] = undefined;

/**
 * Признак FBA это заказ или нет.
 * @member {Boolean} fba
 */
InlineResponse2001.prototype['fba'] = undefined;

/**
 * tmp
 * @member {module:model/InlineResponse2001.StatusEnum} status
 * @default StatusEnum.1
 */
InlineResponse2001.prototype['status'] = InlineResponse2001.StatusEnum[1];

/**
 * Стоимость доставки до склада.
 * @member {Number} deliveryCostToTheWarehouse
 */
InlineResponse2001.prototype['deliveryCostToTheWarehouse'] = undefined;

/**
 * Кнопка в заказе, сообщающая складу что штрихкод на товар поклеен у поставщика.
 * @member {Boolean} isBarCodeAlreadyAttachedByTheSupplier
 */
InlineResponse2001.prototype['isBarCodeAlreadyAttachedByTheSupplier'] = undefined;

/**
 * ????====нет описания ====
 * @member {Boolean} isBarCodeAlreadyAttachedByTheSupplierConfirmedByStorekeeper
 */
InlineResponse2001.prototype['isBarCodeAlreadyAttachedByTheSupplierConfirmedByStorekeeper'] = undefined;

/**
 * Трек номер в ЗАКАЗЕ, по китаю отправленный заказ, до нашего склада. Вводиться баером, в заказ.
 * @member {String} trackingNumberChina
 */
InlineResponse2001.prototype['trackingNumberChina'] = undefined;

/**
 * Сумма оплаты $ за партию товара - это сумма в $ указывается закупщиком
 * @member {Number} amountPaymentPerConsignmentAtDollars
 */
InlineResponse2001.prototype['amountPaymentPerConsignmentAtDollars'] = undefined;

/**
 * Сумма оплаты $ за партию товара - это сумма в $ указывается закупщиком
 * @member {Number} totalPrice
 */
InlineResponse2001.prototype['totalPrice'] = undefined;

/**
 * Если вдруг байер понял что стоимость заказа меняется в меньшую/большую сторону он напишет эту сумму в заказе в поле totalPriceChanged (нужно добавить это поле), далее корректировка стоимости решается через админа. 
 * @member {Number} totalPriceChanged
 */
InlineResponse2001.prototype['totalPriceChanged'] = undefined;

/**
 * ссылка на баркод.
 * @member {String} barCode
 */
InlineResponse2001.prototype['barCode'] = undefined;

/**
 * Массив картинок.
 * @member {Array.<String>} images
 */
InlineResponse2001.prototype['images'] = undefined;

/**
 * @member {Date} createdAt
 */
InlineResponse2001.prototype['createdAt'] = undefined;

/**
 * @member {Date} updatedAt
 */
InlineResponse2001.prototype['updatedAt'] = undefined;

/**
 * кол-во
 * @member {Number} amount
 */
InlineResponse2001.prototype['amount'] = undefined;

/**
 * @member {module:model/InlineResponse200} product
 */
InlineResponse2001.prototype['product'] = undefined;

/**
 * @member {module:model/ApiV1AdminsOrdersCreatedBy} createdBy
 */
InlineResponse2001.prototype['createdBy'] = undefined;




export default InlineResponse2001;

