/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject14 model module.
 * @module model/InlineObject14
 * @version v0.0.1
 */
class InlineObject14 {
    /**
     * Constructs a new <code>InlineObject14</code>.
     * @alias module:model/InlineObject14
     * @param id {String} ASIN продукта
     * @param lamazon {String} Ссылка на этот продукт на амазоне.
     * @param lsupplier {String} Ссылка на поставщика.
     * @param bsr {Number} 
     * @param amazon {Number} 
     * @param supplier {Number} Код поставщика
     * @param fbafee {Number} ФБА комиссия
     * @param delivery {Number} Стоимость доставки.
     * @param icomment {String} Комментарии к товару.
     * @param images {Array.<String>} 
     */
    constructor(id, lamazon, lsupplier, bsr, amazon, supplier, fbafee, delivery, icomment, images) { 
        
        InlineObject14.initialize(this, id, lamazon, lsupplier, bsr, amazon, supplier, fbafee, delivery, icomment, images);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, lamazon, lsupplier, bsr, amazon, supplier, fbafee, delivery, icomment, images) { 
        obj['id'] = id;
        obj['lamazon'] = lamazon;
        obj['lsupplier'] = lsupplier;
        obj['bsr'] = bsr;
        obj['amazon'] = amazon;
        obj['supplier'] = supplier;
        obj['fbafee'] = fbafee;
        obj['delivery'] = delivery;
        obj['icomment'] = icomment;
        obj['images'] = images;
    }

    /**
     * Constructs a <code>InlineObject14</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject14} obj Optional instance to populate.
     * @return {module:model/InlineObject14} The populated <code>InlineObject14</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject14();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lamazon')) {
                obj['lamazon'] = ApiClient.convertToType(data['lamazon'], 'String');
            }
            if (data.hasOwnProperty('lsupplier')) {
                obj['lsupplier'] = ApiClient.convertToType(data['lsupplier'], 'String');
            }
            if (data.hasOwnProperty('bsr')) {
                obj['bsr'] = ApiClient.convertToType(data['bsr'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('amazon')) {
                obj['amazon'] = ApiClient.convertToType(data['amazon'], 'Number');
            }
            if (data.hasOwnProperty('supplier')) {
                obj['supplier'] = ApiClient.convertToType(data['supplier'], 'Number');
            }
            if (data.hasOwnProperty('fbafee')) {
                obj['fbafee'] = ApiClient.convertToType(data['fbafee'], 'Number');
            }
            if (data.hasOwnProperty('delivery')) {
                obj['delivery'] = ApiClient.convertToType(data['delivery'], 'Number');
            }
            if (data.hasOwnProperty('icomment')) {
                obj['icomment'] = ApiClient.convertToType(data['icomment'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * ASIN продукта
 * @member {String} id
 */
InlineObject14.prototype['id'] = undefined;

/**
 * Ссылка на этот продукт на амазоне.
 * @member {String} lamazon
 */
InlineObject14.prototype['lamazon'] = undefined;

/**
 * Ссылка на поставщика.
 * @member {String} lsupplier
 */
InlineObject14.prototype['lsupplier'] = undefined;

/**
 * @member {Number} bsr
 */
InlineObject14.prototype['bsr'] = undefined;

/**
 *  Статус товара. У ресечера: 0 - новый товар.  10 - новый товар с поставщиком
 * @member {module:model/InlineObject14.StatusEnum} status
 * @default StatusEnum.0
 */
InlineObject14.prototype['status'] = StatusEnum.0;

/**
 * @member {Number} amazon
 */
InlineObject14.prototype['amazon'] = undefined;

/**
 * Код поставщика
 * @member {Number} supplier
 */
InlineObject14.prototype['supplier'] = undefined;

/**
 * ФБА комиссия
 * @member {Number} fbafee
 */
InlineObject14.prototype['fbafee'] = undefined;

/**
 * Стоимость доставки.
 * @member {Number} delivery
 */
InlineObject14.prototype['delivery'] = undefined;

/**
 * Комментарии к товару.
 * @member {String} icomment
 */
InlineObject14.prototype['icomment'] = undefined;

/**
 * @member {Array.<String>} images
 */
InlineObject14.prototype['images'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {Number}
 * @readonly
 */
InlineObject14['StatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 10
     * @const
     */
    "10": 10
};



export default InlineObject14;

