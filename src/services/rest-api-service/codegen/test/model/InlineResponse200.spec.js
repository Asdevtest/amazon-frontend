/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Amazonapi);
  }
}(this, function(expect, Amazonapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Amazonapi.InlineResponse200();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse200', function() {
    it('should create an instance of InlineResponse200', function() {
      // uncomment below and update the code to test InlineResponse200
      //var instane = new Amazonapi.InlineResponse200();
      //expect(instance).to.be.a(Amazonapi.InlineResponse200);
    });

    it('should have the property _id (base name: "_id")', function() {
      // uncomment below and update the code to test the property _id
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property material (base name: "material")', function() {
      // uncomment below and update the code to test the property material
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property currentSupplier (base name: "currentSupplier")', function() {
      // uncomment below and update the code to test the property currentSupplier
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property lamazon (base name: "lamazon")', function() {
      // uncomment below and update the code to test the property lamazon
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property lsupplier (base name: "lsupplier")', function() {
      // uncomment below and update the code to test the property lsupplier
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property bsr (base name: "bsr")', function() {
      // uncomment below and update the code to test the property bsr
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property fba (base name: "fba")', function() {
      // uncomment below and update the code to test the property fba
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property express (base name: "express")', function() {
      // uncomment below and update the code to test the property express
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property amazon (base name: "amazon")', function() {
      // uncomment below and update the code to test the property amazon
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property supplier (base name: "supplier")', function() {
      // uncomment below and update the code to test the property supplier
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property reffee (base name: "reffee")', function() {
      // uncomment below and update the code to test the property reffee
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property fbafee (base name: "fbafee")', function() {
      // uncomment below and update the code to test the property fbafee
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property delivery (base name: "delivery")', function() {
      // uncomment below and update the code to test the property delivery
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property fbaamount (base name: "fbaamount")', function() {
      // uncomment below and update the code to test the property fbaamount
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property fbalink (base name: "fbalink")', function() {
      // uncomment below and update the code to test the property fbalink
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property icomment (base name: "icomment")', function() {
      // uncomment below and update the code to test the property icomment
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property checkednotes (base name: "checkednotes")', function() {
      // uncomment below and update the code to test the property checkednotes
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property researcherFine (base name: "researcherFine")', function() {
      // uncomment below and update the code to test the property researcherFine
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property researcherFineComment (base name: "researcherFineComment")', function() {
      // uncomment below and update the code to test the property researcherFineComment
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property supervisorFine (base name: "supervisorFine")', function() {
      // uncomment below and update the code to test the property supervisorFine
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property supervisorFineComment (base name: "supervisorFineComment")', function() {
      // uncomment below and update the code to test the property supervisorFineComment
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property dirdecision (base name: "dirdecision")', function() {
      // uncomment below and update the code to test the property dirdecision
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property amazonDescription (base name: "amazonDescription")', function() {
      // uncomment below and update the code to test the property amazonDescription
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property amazonDetail (base name: "amazonDetail")', function() {
      // uncomment below and update the code to test the property amazonDetail
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property amazonTitle (base name: "amazonTitle")', function() {
      // uncomment below and update the code to test the property amazonTitle
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property barCode (base name: "barCode")', function() {
      // uncomment below and update the code to test the property barCode
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property minpurchase (base name: "minpurchase")', function() {
      // uncomment below and update the code to test the property minpurchase
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property profit (base name: "profit")', function() {
      // uncomment below and update the code to test the property profit
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property margin (base name: "margin")', function() {
      // uncomment below and update the code to test the property margin
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property byboxprice (base name: "byboxprice")', function() {
      // uncomment below and update the code to test the property byboxprice
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property createdby (base name: "createdby")', function() {
      // uncomment below and update the code to test the property createdby
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property createdat (base name: "createdat")', function() {
      // uncomment below and update the code to test the property createdat
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property checkedat (base name: "checkedat")', function() {
      // uncomment below and update the code to test the property checkedat
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property buyer (base name: "buyer")', function() {
      // uncomment below and update the code to test the property buyer
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

    it('should have the property buyerscomment (base name: "buyerscomment")', function() {
      // uncomment below and update the code to test the property buyerscomment
      //var instance = new Amazonapi.InlineResponse200();
      //expect(instance).to.be();
    });

  });

}));
