/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TestSwagger);
  }
}(this, function(expect, TestSwagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TestSwagger.InlineResponse20039();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse20039', function() {
    it('should create an instance of InlineResponse20039', function() {
      // uncomment below and update the code to test InlineResponse20039
      //var instane = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be.a(TestSwagger.InlineResponse20039);
    });

    it('should have the property asin (base name: "asin")', function() {
      // uncomment below and update the code to test the property asin
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property sku (base name: "sku")', function() {
      // uncomment below and update the code to test the property sku
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property roi (base name: "roi")', function() {
      // uncomment below and update the code to test the property roi
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property fbaFbmStock (base name: "fbaFbmStock")', function() {
      // uncomment below and update the code to test the property fbaFbmStock
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property stockValue (base name: "stockValue")', function() {
      // uncomment below and update the code to test the property stockValue
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property estimatedSalesVelocity (base name: "estimatedSalesVelocity")', function() {
      // uncomment below and update the code to test the property estimatedSalesVelocity
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property daysOfStockLeft (base name: "daysOfStockLeft")', function() {
      // uncomment below and update the code to test the property daysOfStockLeft
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property recommendedQuantityForReordering (base name: "recommendedQuantityForReordering")', function() {
      // uncomment below and update the code to test the property recommendedQuantityForReordering
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property runningOutOfStock (base name: "runningOutOfStock")', function() {
      // uncomment below and update the code to test the property runningOutOfStock
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property reserved (base name: "reserved")', function() {
      // uncomment below and update the code to test the property reserved
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property sentToFba (base name: "sentToFba")', function() {
      // uncomment below and update the code to test the property sentToFba
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property fbaPrepStock (base name: "fbaPrepStock")', function() {
      // uncomment below and update the code to test the property fbaPrepStock
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property ordered (base name: "ordered")', function() {
      // uncomment below and update the code to test the property ordered
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property timeToReorder (base name: "timeToReorder")', function() {
      // uncomment below and update the code to test the property timeToReorder
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property marketplace (base name: "marketplace")', function() {
      // uncomment below and update the code to test the property marketplace
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property targetStockRangeAfterNewOrderDays (base name: "targetStockRangeAfterNewOrderDays")', function() {
      // uncomment below and update the code to test the property targetStockRangeAfterNewOrderDays
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property fbaBufferDays (base name: "fbaBufferDays")', function() {
      // uncomment below and update the code to test the property fbaBufferDays
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property manufTimeDays (base name: "manufTimeDays")', function() {
      // uncomment below and update the code to test the property manufTimeDays
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property useAPrepCenter (base name: "useAPrepCenter")', function() {
      // uncomment below and update the code to test the property useAPrepCenter
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property shippingToPrepCenterDays (base name: "shippingToPrepCenterDays")', function() {
      // uncomment below and update the code to test the property shippingToPrepCenterDays
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property shippingToFbaDays (base name: "shippingToFbaDays")', function() {
      // uncomment below and update the code to test the property shippingToFbaDays
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

    it('should have the property traiding-shop (base name: "traiding-shop")', function() {
      // uncomment below and update the code to test the property traiding-shop
      //var instance = new TestSwagger.InlineResponse20039();
      //expect(instance).to.be();
    });

  });

}));
