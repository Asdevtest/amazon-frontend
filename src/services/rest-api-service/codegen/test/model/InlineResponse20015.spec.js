/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TestSwagger);
  }
}(this, function(expect, TestSwagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TestSwagger.InlineResponse20015();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse20015', function() {
    it('should create an instance of InlineResponse20015', function() {
      // uncomment below and update the code to test InlineResponse20015
      //var instane = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be.a(TestSwagger.InlineResponse20015);
    });

    it('should have the property _id (base name: "_id")', function() {
      // uncomment below and update the code to test the property _id
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property strategy (base name: "strategy")', function() {
      // uncomment below and update the code to test the property strategy
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property monthlySales (base name: "monthlySales")', function() {
      // uncomment below and update the code to test the property monthlySales
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property searchVolume (base name: "searchVolume")', function() {
      // uncomment below and update the code to test the property searchVolume
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property minAmazonPrice (base name: "minAmazonPrice")', function() {
      // uncomment below and update the code to test the property minAmazonPrice
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property maxAmazonPrice (base name: "maxAmazonPrice")', function() {
      // uncomment below and update the code to test the property maxAmazonPrice
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property minBSR (base name: "minBSR")', function() {
      // uncomment below and update the code to test the property minBSR
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property maxBSR (base name: "maxBSR")', function() {
      // uncomment below and update the code to test the property maxBSR
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property minReviews (base name: "minReviews")', function() {
      // uncomment below and update the code to test the property minReviews
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property maxReviews (base name: "maxReviews")', function() {
      // uncomment below and update the code to test the property maxReviews
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property minRevenue (base name: "minRevenue")', function() {
      // uncomment below and update the code to test the property minRevenue
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property maxRevenue (base name: "maxRevenue")', function() {
      // uncomment below and update the code to test the property maxRevenue
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property denyProductsBoughtByMe (base name: "denyProductsBoughtByMe")', function() {
      // uncomment below and update the code to test the property denyProductsBoughtByMe
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property denyProductsExistInServiceByCurStrategy (base name: "denyProductsExistInServiceByCurStrategy")', function() {
      // uncomment below and update the code to test the property denyProductsExistInServiceByCurStrategy
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property findSupplier (base name: "findSupplier")', function() {
      // uncomment below and update the code to test the property findSupplier
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property checkedByService (base name: "checkedByService")', function() {
      // uncomment below and update the code to test the property checkedByService
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property createdById (base name: "createdById")', function() {
      // uncomment below and update the code to test the property createdById
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property lastModifiedById (base name: "lastModifiedById")', function() {
      // uncomment below and update the code to test the property lastModifiedById
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new TestSwagger.InlineResponse20015();
      //expect(instance).to.be();
    });

  });

}));
