/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TestSwagger);
  }
}(this, function(expect, TestSwagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TestSwagger.InlineObject104();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineObject104', function() {
    it('should create an instance of InlineObject104', function() {
      // uncomment below and update the code to test InlineObject104
      //var instane = new TestSwagger.InlineObject104();
      //expect(instance).to.be.a(TestSwagger.InlineObject104);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property minlot (base name: "minlot")', function() {
      // uncomment below and update the code to test the property minlot
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property multiplicity (base name: "multiplicity")', function() {
      // uncomment below and update the code to test the property multiplicity
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property yuanRate (base name: "yuanRate")', function() {
      // uncomment below and update the code to test the property yuanRate
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property priceInYuan (base name: "priceInYuan")', function() {
      // uncomment below and update the code to test the property priceInYuan
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property batchDeliveryCostInDollar (base name: "batchDeliveryCostInDollar")', function() {
      // uncomment below and update the code to test the property batchDeliveryCostInDollar
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property batchDeliveryCostInYuan (base name: "batchDeliveryCostInYuan")', function() {
      // uncomment below and update the code to test the property batchDeliveryCostInYuan
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property batchTotalCostInDollar (base name: "batchTotalCostInDollar")', function() {
      // uncomment below and update the code to test the property batchTotalCostInDollar
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property batchTotalCostInYuan (base name: "batchTotalCostInYuan")', function() {
      // uncomment below and update the code to test the property batchTotalCostInYuan
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property productionTerm (base name: "productionTerm")', function() {
      // uncomment below and update the code to test the property productionTerm
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

    it('should have the property boxProperties (base name: "boxProperties")', function() {
      // uncomment below and update the code to test the property boxProperties
      //var instance = new TestSwagger.InlineObject104();
      //expect(instance).to.be();
    });

  });

}));
