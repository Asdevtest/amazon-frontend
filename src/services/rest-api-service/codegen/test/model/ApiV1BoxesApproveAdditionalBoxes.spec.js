/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Amazonapi);
  }
}(this, function(expect, Amazonapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ApiV1BoxesApproveAdditionalBoxes', function() {
    it('should create an instance of ApiV1BoxesApproveAdditionalBoxes', function() {
      // uncomment below and update the code to test ApiV1BoxesApproveAdditionalBoxes
      //var instane = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be.a(Amazonapi.ApiV1BoxesApproveAdditionalBoxes);
    });

    it('should have the property amount (base name: "amount")', function() {
      // uncomment below and update the code to test the property amount
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property lengthCm (base name: "lengthCm")', function() {
      // uncomment below and update the code to test the property lengthCm
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property widthCm (base name: "widthCm")', function() {
      // uncomment below and update the code to test the property widthCm
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property heightCm (base name: "heightCm")', function() {
      // uncomment below and update the code to test the property heightCm
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property weighGrossKg (base name: "weighGrossKg")', function() {
      // uncomment below and update the code to test the property weighGrossKg
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property volumeWeightKg (base name: "volumeWeightKg")', function() {
      // uncomment below and update the code to test the property volumeWeightKg
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property weightFinalAccountingKg (base name: "weightFinalAccountingKg")', function() {
      // uncomment below and update the code to test the property weightFinalAccountingKg
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property lengthCmSupplier (base name: "lengthCmSupplier")', function() {
      // uncomment below and update the code to test the property lengthCmSupplier
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property widthCmSupplier (base name: "widthCmSupplier")', function() {
      // uncomment below and update the code to test the property widthCmSupplier
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property heightCmSupplier (base name: "heightCmSupplier")', function() {
      // uncomment below and update the code to test the property heightCmSupplier
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property weighGrossKgSupplier (base name: "weighGrossKgSupplier")', function() {
      // uncomment below and update the code to test the property weighGrossKgSupplier
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property volumeWeightKgSupplier (base name: "volumeWeightKgSupplier")', function() {
      // uncomment below and update the code to test the property volumeWeightKgSupplier
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property weightFinalAccountingKgSupplier (base name: "weightFinalAccountingKgSupplier")', function() {
      // uncomment below and update the code to test the property weightFinalAccountingKgSupplier
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property warehouse (base name: "warehouse")', function() {
      // uncomment below and update the code to test the property warehouse
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property deliveryMethod (base name: "deliveryMethod")', function() {
      // uncomment below and update the code to test the property deliveryMethod
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property scheduledDispatchDate (base name: "scheduledDispatchDate")', function() {
      // uncomment below and update the code to test the property scheduledDispatchDate
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property factDispatchDate (base name: "factDispatchDate")', function() {
      // uncomment below and update the code to test the property factDispatchDate
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property isDraft (base name: "isDraft")', function() {
      // uncomment below and update the code to test the property isDraft
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property shippingLabel (base name: "shippingLabel")', function() {
      // uncomment below and update the code to test the property shippingLabel
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property lengthCmWarehouse (base name: "lengthCmWarehouse")', function() {
      // uncomment below and update the code to test the property lengthCmWarehouse
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property widthCmWarehouse (base name: "widthCmWarehouse")', function() {
      // uncomment below and update the code to test the property widthCmWarehouse
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property heightCmWarehouse (base name: "heightCmWarehouse")', function() {
      // uncomment below and update the code to test the property heightCmWarehouse
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property weighGrossKgWarehouse (base name: "weighGrossKgWarehouse")', function() {
      // uncomment below and update the code to test the property weighGrossKgWarehouse
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property volumeWeightKgWarehouse (base name: "volumeWeightKgWarehouse")', function() {
      // uncomment below and update the code to test the property volumeWeightKgWarehouse
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property weightFinalAccountingKgWarehouse (base name: "weightFinalAccountingKgWarehouse")', function() {
      // uncomment below and update the code to test the property weightFinalAccountingKgWarehouse
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

    it('should have the property isShippingLabelAttachedByStorekeeper (base name: "isShippingLabelAttachedByStorekeeper")', function() {
      // uncomment below and update the code to test the property isShippingLabelAttachedByStorekeeper
      //var instance = new Amazonapi.ApiV1BoxesApproveAdditionalBoxes();
      //expect(instance).to.be();
    });

  });

}));
