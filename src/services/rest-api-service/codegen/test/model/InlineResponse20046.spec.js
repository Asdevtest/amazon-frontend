/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TestSwagger);
  }
}(this, function(expect, TestSwagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TestSwagger.InlineResponse20046();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineResponse20046', function() {
    it('should create an instance of InlineResponse20046', function() {
      // uncomment below and update the code to test InlineResponse20046
      //var instane = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be.a(TestSwagger.InlineResponse20046);
    });

    it('should have the property amazonFee (base name: "amazonFee")', function() {
      // uncomment below and update the code to test the property amazonFee
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property weightUnitString (base name: "weightUnitString")', function() {
      // uncomment below and update the code to test the property weightUnitString
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property isWhiteGloveRequired (base name: "isWhiteGloveRequired")', function() {
      // uncomment below and update the code to test the property isWhiteGloveRequired
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property subCategory (base name: "subCategory")', function() {
      // uncomment below and update the code to test the property subCategory
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property fnsku (base name: "fnsku")', function() {
      // uncomment below and update the code to test the property fnsku
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property dimensionUnit (base name: "dimensionUnit")', function() {
      // uncomment below and update the code to test the property dimensionUnit
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property binding (base name: "binding")', function() {
      // uncomment below and update the code to test the property binding
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property dimensionUnitString (base name: "dimensionUnitString")', function() {
      // uncomment below and update the code to test the property dimensionUnitString
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property price (base name: "price")', function() {
      // uncomment below and update the code to test the property price
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property imageUrl (base name: "imageUrl")', function() {
      // uncomment below and update the code to test the property imageUrl
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property isAfn (base name: "isAfn")', function() {
      // uncomment below and update the code to test the property isAfn
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property gl (base name: "gl")', function() {
      // uncomment below and update the code to test the property gl
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property TRexId (base name: "TRexId")', function() {
      // uncomment below and update the code to test the property TRexId
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property isAsinLimits (base name: "isAsinLimits")', function() {
      // uncomment below and update the code to test the property isAsinLimits
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property originalUrl (base name: "originalUrl")', function() {
      // uncomment below and update the code to test the property originalUrl
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property productGroup (base name: "productGroup")', function() {
      // uncomment below and update the code to test the property productGroup
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property thumbStringUrl (base name: "thumbStringUrl")', function() {
      // uncomment below and update the code to test the property thumbStringUrl
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property asin (base name: "asin")', function() {
      // uncomment below and update the code to test the property asin
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property encryptedMarketplaceId (base name: "encryptedMarketplaceId")', function() {
      // uncomment below and update the code to test the property encryptedMarketplaceId
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

    it('should have the property weightUnit (base name: "weightUnit")', function() {
      // uncomment below and update the code to test the property weightUnit
      //var instance = new TestSwagger.InlineResponse20046();
      //expect(instance).to.be();
    });

  });

}));
