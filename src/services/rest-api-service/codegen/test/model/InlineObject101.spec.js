/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TestSwagger);
  }
}(this, function(expect, TestSwagger) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TestSwagger.InlineObject101();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InlineObject101', function() {
    it('should create an instance of InlineObject101', function() {
      // uncomment below and update the code to test InlineObject101
      //var instane = new TestSwagger.InlineObject101();
      //expect(instance).to.be.a(TestSwagger.InlineObject101);
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property lamazon (base name: "lamazon")', function() {
      // uncomment below and update the code to test the property lamazon
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property bsr (base name: "bsr")', function() {
      // uncomment below and update the code to test the property bsr
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property fba (base name: "fba")', function() {
      // uncomment below and update the code to test the property fba
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property amazon (base name: "amazon")', function() {
      // uncomment below and update the code to test the property amazon
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property weight (base name: "weight")', function() {
      // uncomment below and update the code to test the property weight
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property reffee (base name: "reffee")', function() {
      // uncomment below and update the code to test the property reffee
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property fbafee (base name: "fbafee")', function() {
      // uncomment below and update the code to test the property fbafee
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property fbaamount (base name: "fbaamount")', function() {
      // uncomment below and update the code to test the property fbaamount
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property icomment (base name: "icomment")', function() {
      // uncomment below and update the code to test the property icomment
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property amazonDescription (base name: "amazonDescription")', function() {
      // uncomment below and update the code to test the property amazonDescription
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property amazonDetail (base name: "amazonDetail")', function() {
      // uncomment below and update the code to test the property amazonDetail
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property amazonTitle (base name: "amazonTitle")', function() {
      // uncomment below and update the code to test the property amazonTitle
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property material (base name: "material")', function() {
      // uncomment below and update the code to test the property material
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property productUsage (base name: "productUsage")', function() {
      // uncomment below and update the code to test the property productUsage
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property chinaTitle (base name: "chinaTitle")', function() {
      // uncomment below and update the code to test the property chinaTitle
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property barCode (base name: "barCode")', function() {
      // uncomment below and update the code to test the property barCode
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property minpurchase (base name: "minpurchase")', function() {
      // uncomment below and update the code to test the property minpurchase
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property profit (base name: "profit")', function() {
      // uncomment below and update the code to test the property profit
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property margin (base name: "margin")', function() {
      // uncomment below and update the code to test the property margin
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property listingName (base name: "listingName")', function() {
      // uncomment below and update the code to test the property listingName
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property listingBulletPoints (base name: "listingBulletPoints")', function() {
      // uncomment below and update the code to test the property listingBulletPoints
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property listingProductDetails (base name: "listingProductDetails")', function() {
      // uncomment below and update the code to test the property listingProductDetails
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property listingSearchTerms (base name: "listingSearchTerms")', function() {
      // uncomment below and update the code to test the property listingSearchTerms
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property listingSubjectMatters (base name: "listingSubjectMatters")', function() {
      // uncomment below and update the code to test the property listingSubjectMatters
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property listingImages (base name: "listingImages")', function() {
      // uncomment below and update the code to test the property listingImages
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property strategyStatus (base name: "strategyStatus")', function() {
      // uncomment below and update the code to test the property strategyStatus
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property niche (base name: "niche")', function() {
      // uncomment below and update the code to test the property niche
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property asins (base name: "asins")', function() {
      // uncomment below and update the code to test the property asins
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property totalRevenue (base name: "totalRevenue")', function() {
      // uncomment below and update the code to test the property totalRevenue
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property coefficient (base name: "coefficient")', function() {
      // uncomment below and update the code to test the property coefficient
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property avgRevenue (base name: "avgRevenue")', function() {
      // uncomment below and update the code to test the property avgRevenue
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property avgBSR (base name: "avgBSR")', function() {
      // uncomment below and update the code to test the property avgBSR
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property avgPrice (base name: "avgPrice")', function() {
      // uncomment below and update the code to test the property avgPrice
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property avgReviews (base name: "avgReviews")', function() {
      // uncomment below and update the code to test the property avgReviews
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

    it('should have the property checkednotes (base name: "checkednotes")', function() {
      // uncomment below and update the code to test the property checkednotes
      //var instance = new TestSwagger.InlineObject101();
      //expect(instance).to.be();
    });

  });

}));
