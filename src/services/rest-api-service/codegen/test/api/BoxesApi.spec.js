/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Amazonapi);
  }
}(this, function(expect, Amazonapi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Amazonapi.BoxesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BoxesApi', function() {
    describe('apiV1BoxesApprovePost', function() {
      it('should call apiV1BoxesApprovePost successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesApprovePost
        //instance.apiV1BoxesApprovePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesCancelMergePost', function() {
      it('should call apiV1BoxesCancelMergePost successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesCancelMergePost
        //instance.apiV1BoxesCancelMergePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesCancelSplitPost', function() {
      it('should call apiV1BoxesCancelSplitPost successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesCancelSplitPost
        //instance.apiV1BoxesCancelSplitPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesClientsDraftsGet', function() {
      it('should call apiV1BoxesClientsDraftsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesClientsDraftsGet
        //instance.apiV1BoxesClientsDraftsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesClientsGet', function() {
      it('should call apiV1BoxesClientsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesClientsGet
        //instance.apiV1BoxesClientsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesDraftsGet', function() {
      it('should call apiV1BoxesDraftsGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesDraftsGet
        //instance.apiV1BoxesDraftsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesGet', function() {
      it('should call apiV1BoxesGet successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesGet
        //instance.apiV1BoxesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesGuidDelete', function() {
      it('should call apiV1BoxesGuidDelete successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesGuidDelete
        //instance.apiV1BoxesGuidDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesMergePost', function() {
      it('should call apiV1BoxesMergePost successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesMergePost
        //instance.apiV1BoxesMergePost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesPost', function() {
      it('should call apiV1BoxesPost successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesPost
        //instance.apiV1BoxesPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesSplitPost', function() {
      it('should call apiV1BoxesSplitPost successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesSplitPost
        //instance.apiV1BoxesSplitPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiV1BoxesStorekeepersGuidPatch', function() {
      it('should call apiV1BoxesStorekeepersGuidPatch successfully', function(done) {
        //uncomment below and update the code to test apiV1BoxesStorekeepersGuidPatch
        //instance.apiV1BoxesStorekeepersGuidPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
