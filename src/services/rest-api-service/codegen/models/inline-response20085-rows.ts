/* tslint:disable */
/* eslint-disable */
/**
 * Test swagger
 * testing the fastify swagger api
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { ApiV1AdminsGetProductsByStatusCreatedBy } from './api-v1-admins-get-products-by-status-created-by';
<<<<<<< HEAD
import { ApiV1AnnouncementsMySpec } from './api-v1-announcements-my-spec';
import { InlineResponse20085Announcement } from './inline-response20085-announcement';
import { InlineResponse20085CountProposalsByStatuses } from './inline-response20085-count-proposals-by-statuses';
import { InlineResponse20085DetailsCustom } from './inline-response20085-details-custom';
<<<<<<< HEAD
import { InlineResponse20085FreelanceNotices } from './inline-response20085-freelance-notices';
=======
>>>>>>> pre-release
import { InlineResponse20085Media } from './inline-response20085-media';
import { InlineResponse20085Product } from './inline-response20085-product';
import { InlineResponse20085Proposals } from './inline-response20085-proposals';
=======
import { InlineResponse20085Request } from './inline-response20085-request';
>>>>>>> pre-release

/**
 * 
 * @export
 * @interface InlineResponse20085Rows
 */
export interface InlineResponse20085Rows {
    /**
     * Guid продожения к заявке.
     * @type {string}
     * @memberof InlineResponse20085Rows
     */
    _id?: string;
    /**
     * Название предложения
     * @type {string}
     * @memberof InlineResponse20085Rows
     */
    title?: string;
    /**
<<<<<<< HEAD
     * Количество предложений.
     * @type {number}
     * @memberof InlineResponse20085Rows
     */
    maxAmountOfProposals: number;
    /**
     * Цена за каждое предложение.
     * @type {number}
     * @memberof InlineResponse20085Rows
     */
    price: number;
    /**
     * Уровень сложности задачи
     * @type {number}
     * @memberof InlineResponse20085Rows
     */
    taskComplexity?: number;
    /**
<<<<<<< HEAD
     *  DRAFT - черновик, заявка создана, но не опубликована  PUBLISHED - заявка опубликована, изменять такую заявку можно! Для того чтобы не произошло неожиданных изменений при  установке этого статуса рассчитываем чек сумму на основе данных самой заявки и деталей при создании и каждом изменении. После этого при публикации предложения будем отправлять этот хеш. Если хеш был изменен то предложение не публикуется и  сервер отдает соответствующую ошибку. Так же из этого статуса можно перевести обратно в статус CREATED (черновик) IN_PROGRESS - по заявке уже есть хотябы одно предложение, изменять такую заявку нельзя, можно только закрыть или снять  с публикации, остановить прием предложений по этой заявке. После этого статуса можно закрыть заявку или она может быть  закрыта автоматически FORBID_NEW_PROPOSALS - снять с публикации, остановить прием предложений по этой заявке, этот статус разрешает закрыть  заявку или перевести ее обратно в статус PUBLISHED/IN_PROGRESS в зависимости от того есть ли по этой заявке уже предложения.  Так же после этого статуса можно закрыть заявку или она может быть автоматически закрыта. Финальные статусы, после них нельзя менять ни заявку ни статус: COMPLETE_PROPOSALS_AMOUNT_ACHIEVED - заявка закрылась автоматически при достижении кол-ва выполненных предложений CANCELED_BY_CREATOR - заявка закрыта пользователем EXPIRED - истек срок заявки, автоматически закрылась Технические статусы: VERIFYING_BY_ADMIN - проверяется адином, такая заявка не отображается в общей выдаче, этот статус выставляет сам админ TO_CORRECT_BY_ADMIN - статус выставляет админ после проверки заявки, после этого статуса можно выставить только статус  READY_TO_VERIFY_BY_ADMIN и эта заявка должна попасть обратно на проверку админу. Если админ проверил все и все ок, то он  выставляет статус CREATED. READY_TO_VERIFY_BY_ADMIN - статус устанавливается клиентом для того чтобы админ проверил изменения по заявке CANCELED_BY_ADMIN - закрыто админом  Статусы для проверки заявки у супервизера (пока вроде не нужно, но статусы можно создать): READY_TO_VERIFY_BY_SUPERVISOR - клиент отправляет заявку на проверку спервизеру, в этом статусе заявка не опубликована  на бирже и подавать предложения нельзя, изменять заявку так же нельзя. Заявки с таким статусом доступны всем супервизерам.  (пока этот функционал вроде не нужен) VERIFYING_BY_SUPERVISOR - в процессе проверки заявки супервизером, в этом статусе заявка не опубликована на бирже и  подавать предложения нельзя, изменять заявку так же нельзя (пока этот функционал вроде не нужен) TO_CORRECT_BY_SUPERVISOR - статус выставляет супервизор после проверки заявки, после этого статуса можно выставить только  статус READY_TO_VERIFY и эта заявка должна попасть обратно на проверку ТОМУ ЖЕ супервизеру что и проверял ее ранее.  (поле supervisorId). Если супервизор проверил все и все ок, то он выставляет статус PUBLISHED. (опять же пока можно заложить  статус но логику не реализовывать) 
=======
     *  DRAFT - черновик, заявка создана, но не опубликована  PUBLISHED - заявка опубликована, изменять такую заявку можно! Для того чтобы не произошло неожиданных изменений при  установке этого статуса рассчитываем чек сумму на основе данных самой заявки и деталей при создании и каждом изменении. После этого при публикации предложения будем отправлять этот хеш. Если хеш был изменен то предложение не публикуется и  сервер отдает соответствующую ошибку. Так же из этого статуса можно перевести обратно в статус CREATED (черновик) IN_PROGRESS - по заявке уже есть хотябы одно предложение, изменять такую заявку нельзя, можно только закрыть или снять  с публикации, остановить прием предложений по этой заявке. После этого статуса можно закрыть заявку или она может быть  закрыта автоматически FORBID_NEW_PROPOSALS - снять с публикации, остановить прием предложений по этой заявке, этот статус разрешает закрыть  заявку или перевести ее обратно в статус PUBLISHED/IN_PROGRESS в зависимости от того есть ли по этой заявке уже предложения.  Так же после этого статуса можно закрыть заявку или она может быть автоматически закрыта. Финальные статусы, после них нельзя менять ни заявку ни статус: COMPLETE_PROPOSALS_AMOUNT_ACHIEVED - заявка закрылась автоматически при достижении кол-ва выполненных предложений CANCELED_BY_CREATOR - заявка закрыта пользователем EXPIRED - истек срок заявки, автоматически закрылась Технические статусы: VERIFYING_BY_ADMIN - проверяется адином, такая заявка не отображается в общей выдаче, этот статус выставляет сам админ TO_CORRECT_BY_ADMIN - статус выставляет админ после проверки заявки, после этого статуса можно выставить только статус  READY_TO_VERIFY_BY_ADMIN и эта заявка должна попасть обратно на проверку админу. Если админ проверил все и все ок, то он  выставляет статус CREATED. READY_TO_VERIFY_BY_ADMIN - статус устанавливается клиентом для того чтобы админ проверил изменения по заявке CANCELED_BY_ADMIN - закрыто админом  Статусы для проверки заявки у супервайзера (пока вроде не нужно, но статусы можно создать): READY_TO_VERIFY_BY_SUPERVISOR - клиент отправляет заявку на проверку спервизеру, в этом статусе заявка не опубликована  на бирже и подавать предложения нельзя, изменять заявку так же нельзя. Заявки с таким статусом доступны всем супервайзерам.  (пока этот функционал вроде не нужен) VERIFYING_BY_SUPERVISOR - в процессе проверки заявки супервайзером, в этом статусе заявка не опубликована на бирже и  подавать предложения нельзя, изменять заявку так же нельзя (пока этот функционал вроде не нужен) TO_CORRECT_BY_SUPERVISOR - статус выставляет супервайзер после проверки заявки, после этого статуса можно выставить только  статус READY_TO_VERIFY и эта заявка должна попасть обратно на проверку ТОМУ ЖЕ супервайзеру что и проверял ее ранее.  (поле supervisorId). Если супервайзер проверил все и все ок, то он выставляет статус PUBLISHED. (опять же пока можно заложить  статус но логику не реализовывать) 
>>>>>>> pre-release
=======
     * Тип предложения.
>>>>>>> pre-release
     * @type {string}
     * @memberof InlineResponse20085Rows
     */
    type?: string;
    /**
     *  CREATED - предложение по заявке создано, с ценой и временем выполнения от исполнителя OFFER_CONDITIONS_ACCEPTED - условия предложения были приняты клиентом, после этого начиначется отсчет времени на выполнение заявки, с этого статуса можно перейти только на READY_TO_VERIFY, с этого момента начинаем учитывать этого исполнителя в счетчике людей работающих по заявке OFFER_CONDITIONS_REJECTED - условия предложения были отклонены клиентом. После изменения условий клиентом выставляется статус OFFER_CONDITIONS_CORRECTED OFFER_CONDITIONS_CORRECTED - исполнитель отредактировал свои условия по предложению чтобы клиент опять их посмотрел и решил принимает или нет, после этого статуса можно опять перейти на OFFER_CONDITIONS_ACCEPTED или OFFER_CONDITIONS_REJECTED READY_TO_VERIFY - статус выставляет исполнитель, статус говорит о том что исполнитель выполнил работу и клиент/супервизор может ее проверять, после этого статуса можно выставить VERIFYING_BY_SUPERVISOR или TO_CORRECT, а так же закрывающие статусы VERIFYING_BY_SUPERVISOR - работа проверяется супервизором TO_CORRECT - отправляется на доработку от клиента/супервизора CORRECTED - исполнитель отмечает работу как исправленная CANCELED_BY_CREATOR_OF_REQUEST - предложение закрывается клиентом, обязательно с комментарием, финальный статус, может быть выставлено только при статусе OFFER_CONDITIONS_REJECTED. Думаю что тут будет еще условия но нужно это обсудить. Этот статус не очень безопасный или может привести к перегрузу админа для решения конфликтных ситуаций CANCELED_BY_SUPERVISOR - предложение закрывается супервизором, обязательно с комментарием, финальный статус, может быть выставлен в любой момент. Тут должна появиться возможность создать запрос в поддержку для решения конфликтных ситуаций, это позже обсудим. CANCELED_BY_EXECUTOR - закрыто исполнителем, обязательно с комментарием, финальный статус, может быть выставлен в любой момент ACCEPTED_BY_CLIENT - принято клиентом, происходи оплата ACCEPTED_BY_SUPERVISOR - принято супервизором, происходи оплата EXPIRED - проставляется автоматически, если время указанное в предложении от исполнителя истекло а предложение не было уже в одном из финальных статусов 
     * @type {string}
     * @memberof InlineResponse20085Rows
     */
    status?: InlineResponse20085RowsStatusEnum;
    /**
     * Время закрытия предложения.
     * @type {string}
     * @memberof InlineResponse20085Rows
     */
    timeoutAt?: string;
    /**
     * Уведомление о таймауте
     * @type {boolean}
     * @memberof InlineResponse20085Rows
     */
    timeoutNotified?: boolean;
    /**
     * Количество доработок по заявке
     * @type {number}
     * @memberof InlineResponse20085Rows
     */
    reworkCounter?: number;
    /**
     * Время на выполнение, в часах.
     * @type {number}
     * @memberof InlineResponse20085Rows
     */
    execution_time?: number;
    /**
     * Количество попыток, подать предложение или исправить результат работы.
     * @type {number}
     * @memberof InlineResponse20085Rows
     */
    attempts?: number;
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse20085Rows
     */
    approvedByMaster?: boolean;
    /**
     * 
     * @type {InlineResponse20085Request}
     * @memberof InlineResponse20085Rows
     */
    request?: InlineResponse20085Request;
    /**
     * 
     * @type {ApiV1AdminsGetProductsByStatusCreatedBy}
     * @memberof InlineResponse20085Rows
     */
    createdBy?: ApiV1AdminsGetProductsByStatusCreatedBy;
    /**
     * 
     * @type {ApiV1AdminsGetProductsByStatusCreatedBy}
     * @memberof InlineResponse20085Rows
     */
    sub?: ApiV1AdminsGetProductsByStatusCreatedBy;
    /**
     * Дата создания
     * @type {string}
     * @memberof InlineResponse20085Rows
     */
    createdAt?: string;
    /**
     * Дата изменения
     * @type {string}
     * @memberof InlineResponse20085Rows
     */
    updatedAt?: string;
<<<<<<< HEAD
    /**
     * 
     * @type {boolean}
     * @memberof InlineResponse20085Rows
     */
    uploadedToListing?: boolean;
    /**
     * 
     * @type {Array<InlineResponse20085Media>}
     * @memberof InlineResponse20085Rows
     */
    media?: Array<InlineResponse20085Media>;
    /**
     * 
     * @type {InlineResponse20085Announcement}
     * @memberof InlineResponse20085Rows
     */
    announcement?: InlineResponse20085Announcement;
    /**
     * 
     * @type {ApiV1AdminsGetProductsByStatusCreatedBy}
     * @memberof InlineResponse20085Rows
     */
    sub?: ApiV1AdminsGetProductsByStatusCreatedBy;
    /**
     * 
     * @type {Array<InlineResponse20085Proposals>}
     * @memberof InlineResponse20085Rows
     */
    proposals?: Array<InlineResponse20085Proposals>;
    /**
     * 
     * @type {ApiV1AdminsGetProductsByStatusCreatedBy}
     * @memberof InlineResponse20085Rows
     */
    executor?: ApiV1AdminsGetProductsByStatusCreatedBy;
    /**
     * 
     * @type {ApiV1AdminsGetProductsByStatusCreatedBy}
     * @memberof InlineResponse20085Rows
     */
    createdBy?: ApiV1AdminsGetProductsByStatusCreatedBy;
    /**
     * 
     * @type {InlineResponse20085CountProposalsByStatuses}
     * @memberof InlineResponse20085Rows
     */
    countProposalsByStatuses?: InlineResponse20085CountProposalsByStatuses;
    /**
<<<<<<< HEAD
     * 
     * @type {Array<InlineResponse20085FreelanceNotices>}
     * @memberof InlineResponse20085Rows
     */
    freelanceNotices?: Array<InlineResponse20085FreelanceNotices>;
=======
     * Count of unread messages
     * @type {number}
     * @memberof InlineResponse20085Rows
     */
    freelanceNotices?: number;
>>>>>>> pre-release
    /**
     * 
     * @type {InlineResponse20085Product}
     * @memberof InlineResponse20085Rows
     */
    product?: InlineResponse20085Product;
    /**
     * 
     * @type {InlineResponse20085DetailsCustom}
     * @memberof InlineResponse20085Rows
     */
    detailsCustom?: InlineResponse20085DetailsCustom;
=======
>>>>>>> pre-release
}

/**
    * @export
    * @enum {string}
    */
export enum InlineResponse20085RowsStatusEnum {
    Created = 'CREATED',
    OfferConditionsAccepted = 'OFFER_CONDITIONS_ACCEPTED',
    ReadyToVerify = 'READY_TO_VERIFY',
    OfferConditionsRejected = 'OFFER_CONDITIONS_REJECTED',
    OfferConditionsCorrected = 'OFFER_CONDITIONS_CORRECTED',
    VerifyingBySupervisor = 'VERIFYING_BY_SUPERVISOR',
    ToCorrect = 'TO_CORRECT',
    Corrected = 'CORRECTED',
    CanceledByCreatorOfRequest = 'CANCELED_BY_CREATOR_OF_REQUEST',
    CanceledBySupervisor = 'CANCELED_BY_SUPERVISOR',
    CanceledByExecutor = 'CANCELED_BY_EXECUTOR',
    AcceptedByClient = 'ACCEPTED_BY_CLIENT',
    AcceptedBySupervisor = 'ACCEPTED_BY_SUPERVISOR',
    Expired = 'EXPIRED',
    CompleteProposalsAmountAchieved = 'COMPLETE_PROPOSALS_AMOUNT_ACHIEVED'
}



