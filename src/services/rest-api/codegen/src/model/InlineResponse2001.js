/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApiV1BuyersOrdersVacItemList from './ApiV1BuyersOrdersVacItemList';

/**
 * The InlineResponse2001 model module.
 * @module model/InlineResponse2001
 * @version v0.0.1
 */
class InlineResponse2001 {
    /**
     * Constructs a new <code>InlineResponse2001</code>.
     * @alias module:model/InlineResponse2001
     * @param buyerId {String} GUID пользователя(байера)
     * @param clientComment {String} Комментарии клиента.
     * @param buyerComment {String} комментарии байера.
     * @param warehouse {Number} Номер склада.
     * @param deliveryMethod {Number} Вид доставки.
     * @param itemList {Array.<module:model/ApiV1BuyersOrdersVacItemList>} Список товаров.
     * @param fba {Boolean} Признак FBA это заказ или нет.
     * @param deliveryCostToTheWarehouse {Number} Стоимость доставки до склада.
     */
    constructor(buyerId, clientComment, buyerComment, warehouse, deliveryMethod, itemList, fba, deliveryCostToTheWarehouse) { 
        
        InlineResponse2001.initialize(this, buyerId, clientComment, buyerComment, warehouse, deliveryMethod, itemList, fba, deliveryCostToTheWarehouse);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, buyerId, clientComment, buyerComment, warehouse, deliveryMethod, itemList, fba, deliveryCostToTheWarehouse) { 
        obj['buyerId'] = buyerId;
        obj['clientComment'] = clientComment;
        obj['buyerComment'] = buyerComment;
        obj['warehouse'] = warehouse;
        obj['deliveryMethod'] = deliveryMethod;
        obj['itemList'] = itemList;
        obj['fba'] = fba;
        obj['deliveryCostToTheWarehouse'] = deliveryCostToTheWarehouse;
    }

    /**
     * Constructs a <code>InlineResponse2001</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineResponse2001} obj Optional instance to populate.
     * @return {module:model/InlineResponse2001} The populated <code>InlineResponse2001</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2001();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('buyerId')) {
                obj['buyerId'] = ApiClient.convertToType(data['buyerId'], 'String');
            }
            if (data.hasOwnProperty('clientComment')) {
                obj['clientComment'] = ApiClient.convertToType(data['clientComment'], 'String');
            }
            if (data.hasOwnProperty('buyerComment')) {
                obj['buyerComment'] = ApiClient.convertToType(data['buyerComment'], 'String');
            }
            if (data.hasOwnProperty('warehouse')) {
                obj['warehouse'] = ApiClient.convertToType(data['warehouse'], 'Number');
            }
            if (data.hasOwnProperty('deliveryMethod')) {
                obj['deliveryMethod'] = ApiClient.convertToType(data['deliveryMethod'], 'Number');
            }
            if (data.hasOwnProperty('itemList')) {
                obj['itemList'] = ApiClient.convertToType(data['itemList'], [ApiV1BuyersOrdersVacItemList]);
            }
            if (data.hasOwnProperty('fba')) {
                obj['fba'] = ApiClient.convertToType(data['fba'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
            if (data.hasOwnProperty('deliveryCostToTheWarehouse')) {
                obj['deliveryCostToTheWarehouse'] = ApiClient.convertToType(data['deliveryCostToTheWarehouse'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * GUID данной записи в БД.
 * @member {String} _id
 */
InlineResponse2001.prototype['_id'] = undefined;

/**
 * GUID пользователя(байера)
 * @member {String} buyerId
 */
InlineResponse2001.prototype['buyerId'] = undefined;

/**
 * Комментарии клиента.
 * @member {String} clientComment
 */
InlineResponse2001.prototype['clientComment'] = undefined;

/**
 * комментарии байера.
 * @member {String} buyerComment
 */
InlineResponse2001.prototype['buyerComment'] = undefined;

/**
 * Номер склада.
 * @member {Number} warehouse
 */
InlineResponse2001.prototype['warehouse'] = undefined;

/**
 * Вид доставки.
 * @member {Number} deliveryMethod
 */
InlineResponse2001.prototype['deliveryMethod'] = undefined;

/**
 * Список товаров.
 * @member {Array.<module:model/ApiV1BuyersOrdersVacItemList>} itemList
 */
InlineResponse2001.prototype['itemList'] = undefined;

/**
 * Признак FBA это заказ или нет.
 * @member {Boolean} fba
 */
InlineResponse2001.prototype['fba'] = undefined;

/**
 * tmp
 * @member {module:model/InlineResponse2001.StatusEnum} status
 * @default StatusEnum.1
 */
InlineResponse2001.prototype['status'] = StatusEnum.1;

/**
 * Стоимость доставки до склада.
 * @member {Number} deliveryCostToTheWarehouse
 */
InlineResponse2001.prototype['deliveryCostToTheWarehouse'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {Number}
 * @readonly
 */
InlineResponse2001['StatusEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 15
     * @const
     */
    "15": 15,

    /**
     * value: 20
     * @const
     */
    "20": 20,

    /**
     * value: 25
     * @const
     */
    "25": 25,

    /**
     * value: 30
     * @const
     */
    "30": 30,

    /**
     * value: 35
     * @const
     */
    "35": 35
};



export default InlineResponse2001;

