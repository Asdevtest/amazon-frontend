/**
 * amazonapi
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InlineObject2 model module.
 * @module model/InlineObject2
 * @version v0.0.1
 */
class InlineObject2 {
    /**
     * Constructs a new <code>InlineObject2</code>.
     * @alias module:model/InlineObject2
     */
    constructor() { 
        
        InlineObject2.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InlineObject2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InlineObject2} obj Optional instance to populate.
     * @return {module:model/InlineObject2} The populated <code>InlineObject2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineObject2();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'Number');
            }
            if (data.hasOwnProperty('fba')) {
                obj['fba'] = ApiClient.convertToType(data['fba'], 'Boolean');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('rate')) {
                obj['rate'] = ApiClient.convertToType(data['rate'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Имя пользователя.
 * @member {String} name
 */
InlineObject2.prototype['name'] = undefined;

/**
 * email
 * @member {String} email
 */
InlineObject2.prototype['email'] = undefined;

/**
 * Код роли присвоенный пользователю.    roles.root = 0    roles.director = 1    roles.super = 2    roles.manager = 3    roles.buyer = 4    roles.candidate = 5    
 * @member {Number} role
 */
InlineObject2.prototype['role'] = undefined;

/**
 * Флаг fba.
 * @member {Boolean} fba
 */
InlineObject2.prototype['fba'] = undefined;

/**
 * Если истина - пользователь активен. Если нет - заблокирован админом.
 * @member {Boolean} active
 */
InlineObject2.prototype['active'] = undefined;

/**
 * Ставка, по который оплачивается сотрудник.
 * @member {Number} rate
 */
InlineObject2.prototype['rate'] = undefined;






export default InlineObject2;

